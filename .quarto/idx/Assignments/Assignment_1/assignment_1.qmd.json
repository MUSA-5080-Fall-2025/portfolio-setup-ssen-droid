{"title":"Assignment 1: Census Data Quality for Policy Decisions","markdown":{"yaml":{"title":"Assignment 1: Census Data Quality for Policy Decisions","subtitle":"Evaluating Data Reliability for Algorithmic Decision-Making","author":"Sam Sen","date":"today","format":{"html":{"code-fold":false,"toc":true,"toc-location":"left","theme":"cosmo"}},"execute":{"warning":false,"message":false}},"headingText":"Assignment Overview","containsRefs":false,"markdown":"\n\n\n## Scenario\n\nYou are a data analyst for the New York Department of Human Services. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.\n\nDrawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues.\n\n## Learning Objectives\n\n- Apply dplyr functions to real census data for policy analysis\n- Evaluate data quality using margins of error \n- Connect technical analysis to algorithmic decision-making\n- Identify potential equity implications of data reliability issues\n- Create professional documentation for policy stakeholders\n\n## Submission Instructions\n\n**Submit by posting your updated portfolio link on Canvas.** Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/`\n\nMake sure to update your `_quarto.yml` navigation to include this assignment under an \"Assignments\" menu.\n\n# Part 1: Portfolio Integration\n\nCreate this assignment in your portfolio repository under an `assignments/assignment_1/` folder structure. Update your navigation menu to include:\n\n\n- text: Assignments\n  menu:\n    - href: assignments/assignment_1/your_file_name.qmd\n      text: \"Assignment 1: Census Data Exploration\"\n\n\nIf there is a special character like comma, you need use double quote mark so that the quarto can identify this as text\n\n# Setup\n\n```{r setup}\n# Load required packages (hint: you need tidycensus, tidyverse, and knitr)\n\n# Set your Census API key\n\n# Choose your state for analysis - assign it to a variable called my_state\n```\n```{r}\nlibrary(tidycensus)\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(stringr)\n\noptions(tigris_use_cache = TRUE)\nmy_state <- \"New York\"  \nacs_year <- 2022\n\n\n\n```\n\n**State Selection:** I have chosen **New York** for this analysis because I am originally from NYC and would like to take a deep dive into some of the census data for this area. \n\n# Part 2: County-Level Resource Assessment\n\n## 2.1 Data Retrieval\n\n**Your Task:** Use `get_acs()` to retrieve county-level data for your chosen state.\n\n**Requirements:**\n- Geography: county level\n- Variables: median household income (B19013_001) and total population (B01003_001)  \n- Year: 2022\n- Survey: acs5\n- Output format: wide\n\n**Hint:** Remember to give your variables descriptive names using the `variables = c(name = \"code\")` syntax.\n\n```{r county-data}\n# Write your get_acs() code here\n\n# Clean the county names to remove state name and \"County\" \n# Hint: use mutate() with str_remove()\n\n# Display the first few rows\n```\n\n```{r}\n# ---- 2.1 County-level data (ACS 2022 5-year) ----\nvars <- c(\n  med_income = \"B19013_001\",  # Median household income\n  total_pop  = \"B01003_001\"   # Total population\n)\n\ncounty_raw <- get_acs(\n  geography = \"county\",\n  variables = vars,\n  year = 2022,\n  survey = \"acs5\",\n  state = my_state,\n  output = \"wide\"\n)\n\ncounty <- county_raw %>%\n  mutate(\n    county = NAME %>%\n      stringr::str_remove(\",\\\\s*.*$\") %>%  # drop \", State\"\n      stringr::str_remove(\"\\\\s*County$\")   # drop trailing \"County\"\n  ) %>%\n  select(\n    county, GEOID,\n    med_incomeE, med_incomeM,\n    total_popE,  total_popM\n  )\n\nknitr::kable(\n  head(county, 10),\n  caption = paste(\"County-level ACS (2022 5-year) for\", my_state),\n  digits = 0\n)\n\n\n```\n\n\n## 2.2 Data Quality Assessment\n\n**Your Task:** Calculate margin of error percentages and create reliability categories.\n\n**Requirements:**\n- Calculate MOE percentage: (margin of error / estimate) * 100\n- Create reliability categories:\n  - High Confidence: MOE < 5%\n  - Moderate Confidence: MOE 5-10%  \n  - Low Confidence: MOE > 10%\n- Create a flag for unreliable estimates (MOE > 10%)\n\n**Hint:** Use `mutate()` with `case_when()` for the categories.\n\n```{r income-reliability}\n# Calculate MOE percentage and reliability categories using mutate()\n\n# Create a summary showing count of counties in each reliability category\n# Hint: use count() and mutate() to add percentages\n```\n\n```{r}\n# ---- 2.2A: compute MOE% for median income ----\ncounty_moe <- county %>%\n  dplyr::mutate(\n    income_moe_pct = dplyr::if_else(\n      !is.na(med_incomeE) & med_incomeE > 0 & !is.na(med_incomeM),\n      100 * med_incomeM / med_incomeE,\n      NA_real_\n    )\n  )\n\n# peek at just the columns we care about\nknitr::kable(\n  county_moe %>%\n    dplyr::select(county, med_incomeE, med_incomeM, income_moe_pct) %>%\n    head(10),\n  caption = \"MOE% for median income (first 10 counties)\",\n  digits = c(0, 0, 0, 1)\n)\n\n```\n```{r}\n# ---- 2.2B: add reliability category ----\ncounty_reliability <- county_moe %>%\n  dplyr::mutate(\n    reliability = dplyr::case_when(\n      is.na(income_moe_pct) ~ \"Unavailable\",\n      income_moe_pct < 5    ~ \"High Confidence\",\n      income_moe_pct <= 10  ~ \"Moderate Confidence\",\n      income_moe_pct > 10   ~ \"Low Confidence\"\n    )\n  )\n\n# quick preview\nknitr::kable(\n  county_reliability %>%\n    dplyr::select(county, med_incomeE, med_incomeM, income_moe_pct, reliability) %>%\n    head(10),\n  caption = \"Income MOE% + reliability category (first 10)\",\n  digits = c(0, 0, 0, 1)\n)\n\n```\n```{r}\n# ---- 2.2C: unreliable flag + summary table ----\ncounty_reliability <- county_reliability %>%\n  dplyr::mutate(unreliable = income_moe_pct > 10)\n\nrel_summary <- county_reliability %>%\n  dplyr::count(reliability) %>%\n  dplyr::mutate(pct = round(100 * n / sum(n), 1)) %>%\n  dplyr::arrange(match(reliability, c(\"High Confidence\",\"Moderate Confidence\",\"Low Confidence\",\"Unavailable\")))\n\nknitr::kable(rel_summary, caption = \"County reliability categories\", digits = 1)\n\n```\n\n## 2.3 High Uncertainty Counties\n\n**Your Task:** Identify the 5 counties with the highest MOE percentages.\n\n**Requirements:**\n- Sort by MOE percentage (highest first)\n- Select the top 5 counties\n- Display: county name, median income, margin of error, MOE percentage, reliability category\n- Format as a professional table using `kable()`\n\n**Hint:** Use `arrange()`, `slice()`, and `select()` functions.\n\n```{r high-uncertainty}\n# Create table of top 5 counties by MOE percentage\n\n# Format as table with kable() - include appropriate column names and caption\n```\n\n```{r}\n# ---- 2.3: Top 5 counties by income MOE% ----\ntop5_uncertainty <- county_reliability %>%\n  dplyr::filter(!is.na(income_moe_pct)) %>%                 # ignore rows where MOE% couldn't be computed\n  dplyr::arrange(dplyr::desc(income_moe_pct)) %>%           # highest MOE% first\n  dplyr::slice(1:5) %>%                                     # top 5\n  dplyr::transmute(                                         # select + rename for presentation\n    county,\n    `Median income ($)` = med_incomeE,\n    `Income MOE ($)`    = med_incomeM,\n    `Income MOE %`      = sprintf(\"%.1f%%\", income_moe_pct),\n     Reliability        = reliability\n  )\n\nknitr::kable(\n  top5_uncertainty,\n  caption = \"Top 5 counties by median income MOE% (ACS 2022 5-year)\"\n) %>%\n  kableExtra::kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\", \"hover\"))\n\n\n```\n\n**Data Quality Commentary:**\n\n[The counties that have higher % reliability are likely to benefit less from algorithmic decision making. These margins of error are too large to give us high confidence in the median income figures. Therefore, algorithms that use this data may cause harm. For example, if the state decides that counties that have <$60K median income will receive social services, Hamilton looks like it's well above this threshold but with such a high margin of error this may not be the case.]\n\n# Part 3: Neighborhood-Level Analysis\n\n## 3.1 Focus Area Selection\n\n**Your Task:** Select 2-3 counties from your reliability analysis for detailed tract-level study.\n\n**Strategy:** Choose counties that represent different reliability levels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to compare how data quality varies.\n\n```{r select-counties}\n# Use filter() to select 2-3 counties from your county_reliability data\n# Store the selected counties in a variable called selected_counties\n\n# Display the selected counties with their key characteristics\n# Show: county name, median income, MOE percentage, reliability category\n\ncounty_reliability %>%\n  dplyr::select(county, med_incomeE, income_moe_pct, reliability) %>%\n  dplyr::arrange(income_moe_pct)\n\n```\n```{r}\n# ---- 3.1: pick counties for tract-level study ----\nselected_counties <- county_reliability %>%\n  dplyr::filter(county %in% c(\"Kings\", \"Greene\", \"Hamilton\")) %>%\n  dplyr::select(county, GEOID, med_incomeE, income_moe_pct, reliability)\n\nknitr::kable(\n  selected_counties,\n  caption = \"Selected counties for tract-level analysis\"\n)\n\n```\n\n**Comment on the output:** Only one county in New York is low confidence with regard to MOE - Hamilton, NY. This is likely due to extremely small population size coupled with small sample perhaps. \n\n## 3.2 Tract-Level Demographics\n\n**Your Task:** Get demographic data for census tracts in your selected counties.\n\n\n**Requirements:**\n- Geography: tract level\n- Variables: white alone (B03002_003), Black/African American (B03002_004), Hispanic/Latino (B03002_012), total population (B03002_001)\n- Use the same state and year as before\n- Output format: wide\n- **Challenge:** You'll need county codes, not names. Look at the GEOID patterns in your county data for hints.\n\n```{r}\n# ---- 3.2: Tract-level demographics (robust county naming via FIPS) ----\n\n# 1) Variables\nvars_tracts <- c(\n  white_nh  = \"B03002_003\",  # White alone, not Hispanic or Latino\n  black_nh  = \"B03002_004\",  # Black alone, not Hispanic or Latino\n  hispanic  = \"B03002_012\",  # Hispanic or Latino\n  total_pop = \"B03002_001\"   # Total population\n)\n\n# 2) 3-digit county FIPS from your selected counties (5-digit GEOID -> last 3)\ncounty_codes3 <- stringr::str_sub(selected_counties$GEOID, -3, -1) %>% unique()\n\n# 3) Pull ACS tract-level data\ntract_raw <- tidycensus::get_acs(\n  geography = \"tract\",\n  variables = vars_tracts,\n  year      = acs_year,\n  survey    = \"acs5\",\n  state     = my_state,\n  county    = county_codes3,\n  output    = \"wide\"\n)\n\n# 4) Derive state/county FIPS from the tract GEOID and join to official names\n#    tract GEOID = SS + CCC + TTTTTT  (state 2, county 3, tract 6)\ntract_demo <- tract_raw %>%\n  dplyr::mutate(\n    state_fips  = stringr::str_sub(GEOID, 1, 2),\n    county_fips = stringr::str_sub(GEOID, 3, 5),\n    tract_label = stringr::str_extract(NAME, \"^Census Tract\\\\s*[^,]+\") %>%\n                  stringr::str_remove(\"^Census Tract\\\\s*\")\n  ) %>%\n  dplyr::left_join(\n    tidycensus::fips_codes %>%\n      dplyr::transmute(\n        state_fips  = state_code,\n        county_fips = county_code,\n        county_label = county,   # e.g., \"Kings\"\n        state_label  = state     # e.g., \"New York\"\n      ),\n    by = c(\"state_fips\", \"county_fips\")\n  ) %>%\n  # 5) Compute percentages\n  dplyr::mutate(\n    pct_white_nh = dplyr::if_else(total_popE > 0, 100 * white_nhE / total_popE, NA_real_),\n    pct_black_nh = dplyr::if_else(total_popE > 0, 100 * black_nhE / total_popE, NA_real_),\n    pct_hispanic = dplyr::if_else(total_popE > 0, 100 * hispanicE / total_popE, NA_real_)\n  )\n\n# Quick peek\nknitr::kable(\n  tract_demo %>%\n    dplyr::select(\n      GEOID, tract_label, county_label,\n      total_popE, white_nhE, pct_white_nh,\n      black_nhE, pct_black_nh,\n      hispanicE, pct_hispanic\n    ) %>% head(10),\n  caption = \"Tract demographics with population percentages (first 10 rows)\",\n  digits = 1\n)\n\n\n```\n\n\n## 3.3 Demographic Analysis\n\n**Your Task:** Analyze the demographic patterns in your selected areas.\n\n**Find the tract with the highest percentage of Hispanic/Latino residents Hint: use arrange() and slice() to get the top tract**\n\n**Calculate average demographics by county using group_by() and summarize() Show: number of tracts, average percentage for each racial/ethnic group**\n\n**Create a nicely formatted table of your results using kable()**\n\n```{r}\n# ---- 3.3A: tract with highest % Hispanic ----\ntop_hispanic_tract <- tract_demo %>%\n  dplyr::filter(!is.na(pct_hispanic)) %>%\n  dplyr::arrange(dplyr::desc(pct_hispanic)) %>%\n  dplyr::slice(1) %>%\n  dplyr::select(\n    GEOID, tract_label, county_label,\n    total_popE, pct_white_nh, pct_black_nh, pct_hispanic\n  )\n\nknitr::kable(\n  top_hispanic_tract,\n  digits = c(0, 0, 0, 0, 1, 1, 1),\n  caption = \"Tract with the highest % Hispanic\"\n)\n\n# ---- 3.3B: summarize by county (population-weighted) ----\ncounty_summary_weighted <- tract_demo %>%\n  dplyr::group_by(county_label) %>%\n  dplyr::summarise(\n    total_pop = sum(total_popE, na.rm = TRUE),\n    white_nh  = sum(white_nhE,  na.rm = TRUE),\n    black_nh  = sum(black_nhE,  na.rm = TRUE),\n    hispanic  = sum(hispanicE,  na.rm = TRUE),\n    n_tracts  = dplyr::n(),\n    .groups = \"drop\"\n  ) %>%\n  dplyr::mutate(\n    pct_white_nh = 100 * white_nh / total_pop,\n    pct_black_nh = 100 * black_nh / total_pop,\n    pct_hispanic = 100 * hispanic / total_pop\n  ) %>%\n  dplyr::select(\n    county_label, n_tracts, total_pop,\n    pct_white_nh, pct_black_nh, pct_hispanic\n  )\n\nknitr::kable(\n  county_summary_weighted,\n  digits = c(0, 0, 0, 1, 1, 1),\n  col.names = c(\"County\", \"Tracts\", \"Population\",\n                \"% White (NH)\", \"% Black (NH)\", \"% Hispanic\"),\n  caption = \"County-wide demographics (ACS 2018–2022 5-year, weighted by population)\"\n)\n\n```\n\n# Part 4: Comprehensive Data Quality Evaluation\n\n## 4.1 MOE Analysis for Demographic Variables\n\n**Your Task:** Examine margins of error for demographic variables to see if some communities have less reliable data.\n\n**Requirements:**\n- Calculate MOE percentages for each demographic variable\n- Flag tracts where any demographic variable has MOE > 15%\n- Create summary statistics\n\n **Calculate MOE percentages for white, Black, and Hispanic variables Hint: use the same formula as before (margin/estimate * 100)**\n\n**Create a flag for tracts with high MOE on any demographic variable Use logical operators (| for OR) in an ifelse() statement**\n\n **Create summary statistics showing how many tracts have data quality issues**\n\n```{r}\n# ---- 4.1: MOE analysis for demographic variables ----\n\n# Safety: ensure tract_demo exists\nstopifnot(exists(\"tract_demo\"))\n\ntract_moe <- tract_demo %>%\n  dplyr::mutate(\n    # MOE% for each group (only when estimate > 0 and MOE available)\n    white_moe_pct    = dplyr::if_else(!is.na(white_nhE)  & white_nhE  > 0 & !is.na(white_nhM),\n                                      100 * white_nhM  / white_nhE,  NA_real_),\n    black_moe_pct    = dplyr::if_else(!is.na(black_nhE)  & black_nhE  > 0 & !is.na(black_nhM),\n                                      100 * black_nhM  / black_nhE,  NA_real_),\n    hispanic_moe_pct = dplyr::if_else(!is.na(hispanicE)  & hispanicE  > 0 & !is.na(hispanicM),\n                                      100 * hispanicM  / hispanicE,  NA_real_),\n\n    # Per-group >15% flags\n    over15_white = white_moe_pct    > 15,\n    over15_black = black_moe_pct    > 15,\n    over15_hisp  = hispanic_moe_pct > 15,\n\n    # Any group over threshold\n    high_moe_flag = over15_white | over15_black | over15_hisp\n  )\n\n# Overall summary\ntract_moe_summary <- tract_moe %>%\n  dplyr::summarise(\n    total_tracts    = dplyr::n(),\n    high_moe_tracts = sum(high_moe_flag, na.rm = TRUE),\n    pct_high_moe    = round(100 * high_moe_tracts / total_tracts, 1),\n    # count tracts where at least one MOE% couldn't be computed\n    any_moe_na      = sum(is.na(white_moe_pct) | is.na(black_moe_pct) | is.na(hispanic_moe_pct))\n  )\n\nknitr::kable(\n  tract_moe_summary,\n  digits = 1,\n  caption = \"Summary of high-MOE tracts (ACS 2018–2022 5-year)\"\n)\n\n```\n\n\n\n## 4.2 Pattern Analysis\n\n**Your Task:** Investigate whether data quality problems are randomly distributed or concentrated in certain types of communities.\n\n **Group tracts by whether they have high MOE issues. Calculate average characteristics for each group:population size, demographic percentages** \n\n **Use group_by() and summarize() to create this comparison. Create a professional table showing the pattern**\n\n\n```{r}\n# ---- 4.2A: Compare tracts with vs. without high MOE issues ----\n\npattern_analysis <- tract_moe %>%\n  dplyr::group_by(high_moe_flag) %>%\n  dplyr::summarise(\n    n_tracts         = dplyr::n(),\n    avg_pop          = mean(total_popE, na.rm = TRUE),\n    avg_pct_white    = mean(pct_white_nh, na.rm = TRUE),\n    avg_pct_black    = mean(pct_black_nh, na.rm = TRUE),\n    avg_pct_hispanic = mean(pct_hispanic, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\nknitr::kable(\n  pattern_analysis,\n  digits = 1,\n  col.names = c(\"High MOE Flag\", \"Tracts\", \"Avg Pop\",\n                \"Avg % White (NH)\", \"Avg % Black (NH)\", \"Avg % Hispanic\"),\n  caption = \"Comparison of tracts with vs. without high MOE issues\"\n)\n\n# ---- 4.2B: Count MOE>15% flags by county ----\n\nflags_by_county <- tract_moe %>%\n  dplyr::group_by(county_label) %>%\n  dplyr::summarise(\n    white_flags    = sum(over15_white,    na.rm = TRUE),\n    black_flags    = sum(over15_black,    na.rm = TRUE),\n    hispanic_flags = sum(over15_hisp,     na.rm = TRUE),\n    total_tracts   = dplyr::n(),\n    any_high_moe   = sum(high_moe_flag,   na.rm = TRUE),\n    pct_flagged    = round(100 * any_high_moe / total_tracts, 1),\n    .groups = \"drop\"\n  ) %>%\n  dplyr::arrange(dplyr::desc(pct_flagged))\n\nknitr::kable(\n  flags_by_county,\n  digits = 1,\n  caption = \"Tracts with MOE% > 15% by county (counts and % of tracts flagged)\"\n)\n\n```\n\n\n**Pattern Analysis:** [In rural counties like Greene and Hamilton, ACS reliability issues fall disproportionately on minority groups: nearly every Black and Hispanic estimate is flagged as unreliable, while White estimates are more stable. In contrast, in Kings County (Brooklyn), almost every tract shows MOEs above 15% for all racial/ethnic groups (White ≈91%, Black ≈88%, Hispanic ≈96%). This demonstrates that in small-population counties, unreliability is concentrated on underrepresented groups, while in large urban counties the problem is structural to the tract-level ACS — margins of error are high across the board. For policy and algorithmic applications, this means that minority communities in rural areas risk being systematically undercounted, while in urban areas all groups are at risk of noisy estimates that could mislead algorithmic decision-making\n\n\n# Part 5: Policy Recommendations\n\n## 5.1 Analysis Integration and Professional Summary\n\n**Your Task:** Write an executive summary that integrates findings from all four analyses.\n\n**Executive Summary Requirements:**\n1. **Overall Pattern Identification**: What are the systematic patterns across all your analyses?\n2. **Equity Assessment**: Which communities face the greatest risk of algorithmic bias based on your findings?\n3. **Root Cause Analysis**: What underlying factors drive both data quality issues and bias risk?\n4. **Strategic Recommendations**: What should the Department implement to address these systematic issues?\n\n**Executive Summary:**\n\nThis analysis of American Community Survey (ACS) data for New York counties reveals a striking divergence between county-level reliability and tract-level detail. At the county scale, median household income estimates are generally robust: the majority of counties fall within the “High Confidence” category (MOE < 5%), and even in New York City’s Kings County the median income estimate is highly reliable. However, when we move to tract-level race and ethnicity measures, margins of error grow dramatically. Across the selected counties, nearly all tracts report at least one racial/ethnic estimate with MOE greater than 15%, demonstrating that while income data is dependable for algorithmic policy use, subgroup demographic data is far more uncertain.\n\nThe communities most at risk of algorithmic bias differ by geography. In rural counties such as Greene and Hamilton, small minority populations produce unstable estimates, leading to systematically unreliable data for Black and Hispanic residents. In contrast, in large urban counties like Kings, data quality issues are not confined to minority groups—margins of error are high for nearly all racial/ethnic categories. Thus, while statewide income thresholds could be applied equitably, any algorithm that targets resources based on racial composition at the tract level risks disproportionately misclassifying both rural minority communities and dense urban neighborhoods.\n\nThe root causes of these quality issues stem from the ACS’s design. The survey is sample-based, and smaller geographies such as census tracts often have limited sample sizes. This yields stable estimates for broadly distributed characteristics like total population or income, but highly uncertain estimates for smaller subgroups. The result is that variables most relevant to equity and inclusion—race and ethnicity—are precisely those with the least reliable data. This structural limitation increases the risk that automated decision-making systems will entrench inequities rather than reduce them.\n\nTo mitigate these risks, the Department should adopt a layered strategy. First, continue to use county-level median income data for resource allocation, where confidence is high. Second, treat tract-level demographic estimates with caution: use them only in conjunction with safeguards such as minimum population thresholds or higher-level geographic aggregation. Third, flag tracts where margins of error exceed set thresholds for manual review rather than algorithmic assignment. Finally, pair ACS data with supplemental sources—administrative records, local surveys, or community-based reporting—to ensure that equity-sensitive decisions are not based solely on unreliable estimates. Taken together, these measures will allow the Department to leverage ACS data responsibly while minimizing the risks of algorithmic biase\n\n## 6.3 Specific Recommendations\n\n**Your Task:** Create a decision framework for algorithm implementation.\n\n```{r}\n# ---- Decision framework table (minimal + robust) ----\nlibrary(dplyr)\nlibrary(knitr)\n\ndecision_tbl <- county_reliability %>%\n  # keep rows where we can actually decide something\n  filter(!is.na(med_incomeE), !is.na(income_moe_pct)) %>%\n  # If your data already has `reliability`, we’ll use it; otherwise derive it from MOE%\n  mutate(\n    reliability = case_when(\n      !is.na(reliability) ~ reliability,\n      income_moe_pct <= 5     ~ \"High Confidence\",\n      income_moe_pct <= 10    ~ \"Moderate Confidence\",\n      TRUE                    ~ \"Low Confidence\"\n    ),\n    # Map reliability -> implementation recommendation\n    recommendation = case_when(\n      reliability == \"High Confidence\"      ~ \"Safe for algorithmic decisions\",\n      reliability == \"Moderate Confidence\"  ~ \"Use with caution - monitor outcomes\",\n      reliability == \"Low Confidence\"       ~ \"Requires manual review or additional data\",\n      TRUE                                  ~ \"Review needed\"\n    ),\n    # Pretty formatting for display only\n    `Median income ($)` = formatC(med_incomeE, format = \"f\", digits = 0, big.mark = \",\"),\n    `Income MOE %` = sprintf(\"%.1f%%\", income_moe_pct),\n    # Order rows by reliability (High → Moderate → Low)\n    reliability = factor(reliability, levels = c(\"High Confidence\",\"Moderate Confidence\",\"Low Confidence\"))\n  ) %>%\n  transmute(\n    County = county,\n    `Median income ($)`,\n    `Income MOE %`,\n    Reliability = reliability,\n    Recommendation = recommendation\n  ) %>%\n  arrange(Reliability, County)\n\nknitr::kable(\n  decision_tbl,\n  caption = \"Decision Framework for Algorithm Implementation (ACS 2022 5-year)\"\n)\n```\n**Key Recommendations:**\n\n**Your Task:** Use your analysis results to provide specific guidance to the department.\n\n1. **Counties suitable for immediate algorithmic implementation:** Counties with High Confidence median income data, such as Kings County, are appropriate for algorithmic targeting when the policy is tied to income thresholds. Median household income estimates here have margins of error well under 5%, which provides sufficient reliability for resource allocation decisions. However, even in these counties, subgroup race/ethnicity estimates should not be used as standalone inputs given their high margins of error.\n\n2. **Counties requiring additional oversight:** Counties with Moderate Confidence income estimates, such as Greene County, can be incorporated into algorithmic systems only with safeguards. Algorithms should flag Greene’s tracts for periodic review and be supplemented with monitoring of outcomes to ensure that borderline or unstable estimates do not result in systematic underfunding. Oversight might include comparing ACS estimates with administrative data or community-level surveys on a recurring basis.\n\n3. **Counties needing alternative approaches:** Counties with Low Confidence data, such as Hamilton County, should not be subject to fully automated decision-making. Here, the small population base yields large margins of error that make both income and subgroup data unreliable. Policy in these counties should rely on manual review, qualitative assessments from local agencies, or additional data collection (e.g., oversampling or local needs assessments) before allocating funds\n\n## Questions for Further Investigation\n\n[List 2-3 questions that your analysis raised that you'd like to explore further in future assignments. Consider questions about spatial patterns, time trends, or other demographic factors.]\n\n1. Spatial patterns: Do tracts with high MOE cluster geographically (e.g., in rural versus urban areas), and how might these clusters bias statewide resource allocation?\n\n2. Time trends: How stable are ACS estimates over multiple 5-year periods, and could temporal averaging reduce the volatility of tract-level race/ethnicity estimates?\n\n3. Alternative data sources: Could administrative records (e.g., SNAP enrollment, school free-lunch participation) provide more reliable indicators of local need than ACS tract-level subgroup data?\n\n## Technical Notes\n\n**Data Sources**:\n\nU.S. Census Bureau, American Community Survey (ACS) 2018–2022 5-Year Estimates\n\nData retrieved using the tidycensus R package on 4.5.1\n\n**Reproducibility**\n\nAll analysis conducted in R version [insert version, e.g., 4.3.2]\n\nRequired packages: tidycensus, tidyverse, knitr, stringr\n\nA valid Census API key is required; results can be replicated by loading the same variables and geographies for ACS 5-year 2022\n\nComplete code and documentation are available at: [your portfolio URL]\n\n**Methodology Notes**\n\nCounty-level income and population estimates were retrieved in “wide” format to simplify margin of error calculations.\n\nReliability categories were created using thresholds (<5% = High, 5–10% = Moderate, >10% = Low).\n\nCounties were selected for tract-level analysis to represent different reliability levels (Kings = high, Greene = moderate, Hamilton = low).\n\nTract-level race/ethnicity percentages were calculated by dividing group counts by total population, then multiplying by 100.\n\nCounty labels for tracts were assigned using official FIPS codes rather than string parsing to avoid NA parsing issues.\n\nHigh MOE flags were set at 15% for subgroup demographics, following common practice in ACS data quality analysis.\n\n**Limitations**\n\nACS estimates are based on sample surveys and are subject to sampling error; margins of error can be especially large for small populations and detailed subgroups.\n\nTract-level data for race/ethnicity is particularly volatile; nearly all tracts in Kings County showed MOE% > 15%.\n\nRural counties (e.g., Hamilton) have very small populations, making subgroup estimates unreliable or unavailable.\n\nTemporal limitations: results are based on the 2018–2022 5-year ACS and may not reflect more recent economic or demographic shifts.\n\nGeographic limitations: analysis focused on New York; findings may not generalize to other states without adjustment for local context.\n\n---\n\n## Submission Checklist\n\nBefore submitting your portfolio link on Canvas:\n\n- [ ] All code chunks run without errors\n- [ ] All \"[Fill this in]\" prompts have been completed\n- [ ] Tables are properly formatted and readable\n- [ ] Executive summary addresses all four required components\n- [ ] Portfolio navigation includes this assignment\n- [ ] Census API key is properly set \n- [ ] Document renders correctly to HTML\n\n**Remember:** Submit your portfolio URL on Canvas, not the file itself. Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/your_file_name.html`\n\n```{r}\nlibrary(knitr)\nprint(kable(data.frame(A=1:3, B=c(\"x\",\"y\",\"z\")),\n            caption = \"Sanity check: if you see this, Quarto is printing tables\"))\n\n```\n\n","srcMarkdownNoYaml":"\n\n# Assignment Overview\n\n## Scenario\n\nYou are a data analyst for the New York Department of Human Services. The department is considering implementing an algorithmic system to identify communities that should receive priority for social service funding and outreach programs. Your supervisor has asked you to evaluate the quality and reliability of available census data to inform this decision.\n\nDrawing on our Week 2 discussion of algorithmic bias, you need to assess not just what the data shows, but how reliable it is and what communities might be affected by data quality issues.\n\n## Learning Objectives\n\n- Apply dplyr functions to real census data for policy analysis\n- Evaluate data quality using margins of error \n- Connect technical analysis to algorithmic decision-making\n- Identify potential equity implications of data reliability issues\n- Create professional documentation for policy stakeholders\n\n## Submission Instructions\n\n**Submit by posting your updated portfolio link on Canvas.** Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/`\n\nMake sure to update your `_quarto.yml` navigation to include this assignment under an \"Assignments\" menu.\n\n# Part 1: Portfolio Integration\n\nCreate this assignment in your portfolio repository under an `assignments/assignment_1/` folder structure. Update your navigation menu to include:\n\n\n- text: Assignments\n  menu:\n    - href: assignments/assignment_1/your_file_name.qmd\n      text: \"Assignment 1: Census Data Exploration\"\n\n\nIf there is a special character like comma, you need use double quote mark so that the quarto can identify this as text\n\n# Setup\n\n```{r setup}\n# Load required packages (hint: you need tidycensus, tidyverse, and knitr)\n\n# Set your Census API key\n\n# Choose your state for analysis - assign it to a variable called my_state\n```\n```{r}\nlibrary(tidycensus)\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(stringr)\n\noptions(tigris_use_cache = TRUE)\nmy_state <- \"New York\"  \nacs_year <- 2022\n\n\n\n```\n\n**State Selection:** I have chosen **New York** for this analysis because I am originally from NYC and would like to take a deep dive into some of the census data for this area. \n\n# Part 2: County-Level Resource Assessment\n\n## 2.1 Data Retrieval\n\n**Your Task:** Use `get_acs()` to retrieve county-level data for your chosen state.\n\n**Requirements:**\n- Geography: county level\n- Variables: median household income (B19013_001) and total population (B01003_001)  \n- Year: 2022\n- Survey: acs5\n- Output format: wide\n\n**Hint:** Remember to give your variables descriptive names using the `variables = c(name = \"code\")` syntax.\n\n```{r county-data}\n# Write your get_acs() code here\n\n# Clean the county names to remove state name and \"County\" \n# Hint: use mutate() with str_remove()\n\n# Display the first few rows\n```\n\n```{r}\n# ---- 2.1 County-level data (ACS 2022 5-year) ----\nvars <- c(\n  med_income = \"B19013_001\",  # Median household income\n  total_pop  = \"B01003_001\"   # Total population\n)\n\ncounty_raw <- get_acs(\n  geography = \"county\",\n  variables = vars,\n  year = 2022,\n  survey = \"acs5\",\n  state = my_state,\n  output = \"wide\"\n)\n\ncounty <- county_raw %>%\n  mutate(\n    county = NAME %>%\n      stringr::str_remove(\",\\\\s*.*$\") %>%  # drop \", State\"\n      stringr::str_remove(\"\\\\s*County$\")   # drop trailing \"County\"\n  ) %>%\n  select(\n    county, GEOID,\n    med_incomeE, med_incomeM,\n    total_popE,  total_popM\n  )\n\nknitr::kable(\n  head(county, 10),\n  caption = paste(\"County-level ACS (2022 5-year) for\", my_state),\n  digits = 0\n)\n\n\n```\n\n\n## 2.2 Data Quality Assessment\n\n**Your Task:** Calculate margin of error percentages and create reliability categories.\n\n**Requirements:**\n- Calculate MOE percentage: (margin of error / estimate) * 100\n- Create reliability categories:\n  - High Confidence: MOE < 5%\n  - Moderate Confidence: MOE 5-10%  \n  - Low Confidence: MOE > 10%\n- Create a flag for unreliable estimates (MOE > 10%)\n\n**Hint:** Use `mutate()` with `case_when()` for the categories.\n\n```{r income-reliability}\n# Calculate MOE percentage and reliability categories using mutate()\n\n# Create a summary showing count of counties in each reliability category\n# Hint: use count() and mutate() to add percentages\n```\n\n```{r}\n# ---- 2.2A: compute MOE% for median income ----\ncounty_moe <- county %>%\n  dplyr::mutate(\n    income_moe_pct = dplyr::if_else(\n      !is.na(med_incomeE) & med_incomeE > 0 & !is.na(med_incomeM),\n      100 * med_incomeM / med_incomeE,\n      NA_real_\n    )\n  )\n\n# peek at just the columns we care about\nknitr::kable(\n  county_moe %>%\n    dplyr::select(county, med_incomeE, med_incomeM, income_moe_pct) %>%\n    head(10),\n  caption = \"MOE% for median income (first 10 counties)\",\n  digits = c(0, 0, 0, 1)\n)\n\n```\n```{r}\n# ---- 2.2B: add reliability category ----\ncounty_reliability <- county_moe %>%\n  dplyr::mutate(\n    reliability = dplyr::case_when(\n      is.na(income_moe_pct) ~ \"Unavailable\",\n      income_moe_pct < 5    ~ \"High Confidence\",\n      income_moe_pct <= 10  ~ \"Moderate Confidence\",\n      income_moe_pct > 10   ~ \"Low Confidence\"\n    )\n  )\n\n# quick preview\nknitr::kable(\n  county_reliability %>%\n    dplyr::select(county, med_incomeE, med_incomeM, income_moe_pct, reliability) %>%\n    head(10),\n  caption = \"Income MOE% + reliability category (first 10)\",\n  digits = c(0, 0, 0, 1)\n)\n\n```\n```{r}\n# ---- 2.2C: unreliable flag + summary table ----\ncounty_reliability <- county_reliability %>%\n  dplyr::mutate(unreliable = income_moe_pct > 10)\n\nrel_summary <- county_reliability %>%\n  dplyr::count(reliability) %>%\n  dplyr::mutate(pct = round(100 * n / sum(n), 1)) %>%\n  dplyr::arrange(match(reliability, c(\"High Confidence\",\"Moderate Confidence\",\"Low Confidence\",\"Unavailable\")))\n\nknitr::kable(rel_summary, caption = \"County reliability categories\", digits = 1)\n\n```\n\n## 2.3 High Uncertainty Counties\n\n**Your Task:** Identify the 5 counties with the highest MOE percentages.\n\n**Requirements:**\n- Sort by MOE percentage (highest first)\n- Select the top 5 counties\n- Display: county name, median income, margin of error, MOE percentage, reliability category\n- Format as a professional table using `kable()`\n\n**Hint:** Use `arrange()`, `slice()`, and `select()` functions.\n\n```{r high-uncertainty}\n# Create table of top 5 counties by MOE percentage\n\n# Format as table with kable() - include appropriate column names and caption\n```\n\n```{r}\n# ---- 2.3: Top 5 counties by income MOE% ----\ntop5_uncertainty <- county_reliability %>%\n  dplyr::filter(!is.na(income_moe_pct)) %>%                 # ignore rows where MOE% couldn't be computed\n  dplyr::arrange(dplyr::desc(income_moe_pct)) %>%           # highest MOE% first\n  dplyr::slice(1:5) %>%                                     # top 5\n  dplyr::transmute(                                         # select + rename for presentation\n    county,\n    `Median income ($)` = med_incomeE,\n    `Income MOE ($)`    = med_incomeM,\n    `Income MOE %`      = sprintf(\"%.1f%%\", income_moe_pct),\n     Reliability        = reliability\n  )\n\nknitr::kable(\n  top5_uncertainty,\n  caption = \"Top 5 counties by median income MOE% (ACS 2022 5-year)\"\n) %>%\n  kableExtra::kable_styling(full_width = FALSE, bootstrap_options = c(\"striped\", \"hover\"))\n\n\n```\n\n**Data Quality Commentary:**\n\n[The counties that have higher % reliability are likely to benefit less from algorithmic decision making. These margins of error are too large to give us high confidence in the median income figures. Therefore, algorithms that use this data may cause harm. For example, if the state decides that counties that have <$60K median income will receive social services, Hamilton looks like it's well above this threshold but with such a high margin of error this may not be the case.]\n\n# Part 3: Neighborhood-Level Analysis\n\n## 3.1 Focus Area Selection\n\n**Your Task:** Select 2-3 counties from your reliability analysis for detailed tract-level study.\n\n**Strategy:** Choose counties that represent different reliability levels (e.g., 1 high confidence, 1 moderate, 1 low confidence) to compare how data quality varies.\n\n```{r select-counties}\n# Use filter() to select 2-3 counties from your county_reliability data\n# Store the selected counties in a variable called selected_counties\n\n# Display the selected counties with their key characteristics\n# Show: county name, median income, MOE percentage, reliability category\n\ncounty_reliability %>%\n  dplyr::select(county, med_incomeE, income_moe_pct, reliability) %>%\n  dplyr::arrange(income_moe_pct)\n\n```\n```{r}\n# ---- 3.1: pick counties for tract-level study ----\nselected_counties <- county_reliability %>%\n  dplyr::filter(county %in% c(\"Kings\", \"Greene\", \"Hamilton\")) %>%\n  dplyr::select(county, GEOID, med_incomeE, income_moe_pct, reliability)\n\nknitr::kable(\n  selected_counties,\n  caption = \"Selected counties for tract-level analysis\"\n)\n\n```\n\n**Comment on the output:** Only one county in New York is low confidence with regard to MOE - Hamilton, NY. This is likely due to extremely small population size coupled with small sample perhaps. \n\n## 3.2 Tract-Level Demographics\n\n**Your Task:** Get demographic data for census tracts in your selected counties.\n\n\n**Requirements:**\n- Geography: tract level\n- Variables: white alone (B03002_003), Black/African American (B03002_004), Hispanic/Latino (B03002_012), total population (B03002_001)\n- Use the same state and year as before\n- Output format: wide\n- **Challenge:** You'll need county codes, not names. Look at the GEOID patterns in your county data for hints.\n\n```{r}\n# ---- 3.2: Tract-level demographics (robust county naming via FIPS) ----\n\n# 1) Variables\nvars_tracts <- c(\n  white_nh  = \"B03002_003\",  # White alone, not Hispanic or Latino\n  black_nh  = \"B03002_004\",  # Black alone, not Hispanic or Latino\n  hispanic  = \"B03002_012\",  # Hispanic or Latino\n  total_pop = \"B03002_001\"   # Total population\n)\n\n# 2) 3-digit county FIPS from your selected counties (5-digit GEOID -> last 3)\ncounty_codes3 <- stringr::str_sub(selected_counties$GEOID, -3, -1) %>% unique()\n\n# 3) Pull ACS tract-level data\ntract_raw <- tidycensus::get_acs(\n  geography = \"tract\",\n  variables = vars_tracts,\n  year      = acs_year,\n  survey    = \"acs5\",\n  state     = my_state,\n  county    = county_codes3,\n  output    = \"wide\"\n)\n\n# 4) Derive state/county FIPS from the tract GEOID and join to official names\n#    tract GEOID = SS + CCC + TTTTTT  (state 2, county 3, tract 6)\ntract_demo <- tract_raw %>%\n  dplyr::mutate(\n    state_fips  = stringr::str_sub(GEOID, 1, 2),\n    county_fips = stringr::str_sub(GEOID, 3, 5),\n    tract_label = stringr::str_extract(NAME, \"^Census Tract\\\\s*[^,]+\") %>%\n                  stringr::str_remove(\"^Census Tract\\\\s*\")\n  ) %>%\n  dplyr::left_join(\n    tidycensus::fips_codes %>%\n      dplyr::transmute(\n        state_fips  = state_code,\n        county_fips = county_code,\n        county_label = county,   # e.g., \"Kings\"\n        state_label  = state     # e.g., \"New York\"\n      ),\n    by = c(\"state_fips\", \"county_fips\")\n  ) %>%\n  # 5) Compute percentages\n  dplyr::mutate(\n    pct_white_nh = dplyr::if_else(total_popE > 0, 100 * white_nhE / total_popE, NA_real_),\n    pct_black_nh = dplyr::if_else(total_popE > 0, 100 * black_nhE / total_popE, NA_real_),\n    pct_hispanic = dplyr::if_else(total_popE > 0, 100 * hispanicE / total_popE, NA_real_)\n  )\n\n# Quick peek\nknitr::kable(\n  tract_demo %>%\n    dplyr::select(\n      GEOID, tract_label, county_label,\n      total_popE, white_nhE, pct_white_nh,\n      black_nhE, pct_black_nh,\n      hispanicE, pct_hispanic\n    ) %>% head(10),\n  caption = \"Tract demographics with population percentages (first 10 rows)\",\n  digits = 1\n)\n\n\n```\n\n\n## 3.3 Demographic Analysis\n\n**Your Task:** Analyze the demographic patterns in your selected areas.\n\n**Find the tract with the highest percentage of Hispanic/Latino residents Hint: use arrange() and slice() to get the top tract**\n\n**Calculate average demographics by county using group_by() and summarize() Show: number of tracts, average percentage for each racial/ethnic group**\n\n**Create a nicely formatted table of your results using kable()**\n\n```{r}\n# ---- 3.3A: tract with highest % Hispanic ----\ntop_hispanic_tract <- tract_demo %>%\n  dplyr::filter(!is.na(pct_hispanic)) %>%\n  dplyr::arrange(dplyr::desc(pct_hispanic)) %>%\n  dplyr::slice(1) %>%\n  dplyr::select(\n    GEOID, tract_label, county_label,\n    total_popE, pct_white_nh, pct_black_nh, pct_hispanic\n  )\n\nknitr::kable(\n  top_hispanic_tract,\n  digits = c(0, 0, 0, 0, 1, 1, 1),\n  caption = \"Tract with the highest % Hispanic\"\n)\n\n# ---- 3.3B: summarize by county (population-weighted) ----\ncounty_summary_weighted <- tract_demo %>%\n  dplyr::group_by(county_label) %>%\n  dplyr::summarise(\n    total_pop = sum(total_popE, na.rm = TRUE),\n    white_nh  = sum(white_nhE,  na.rm = TRUE),\n    black_nh  = sum(black_nhE,  na.rm = TRUE),\n    hispanic  = sum(hispanicE,  na.rm = TRUE),\n    n_tracts  = dplyr::n(),\n    .groups = \"drop\"\n  ) %>%\n  dplyr::mutate(\n    pct_white_nh = 100 * white_nh / total_pop,\n    pct_black_nh = 100 * black_nh / total_pop,\n    pct_hispanic = 100 * hispanic / total_pop\n  ) %>%\n  dplyr::select(\n    county_label, n_tracts, total_pop,\n    pct_white_nh, pct_black_nh, pct_hispanic\n  )\n\nknitr::kable(\n  county_summary_weighted,\n  digits = c(0, 0, 0, 1, 1, 1),\n  col.names = c(\"County\", \"Tracts\", \"Population\",\n                \"% White (NH)\", \"% Black (NH)\", \"% Hispanic\"),\n  caption = \"County-wide demographics (ACS 2018–2022 5-year, weighted by population)\"\n)\n\n```\n\n# Part 4: Comprehensive Data Quality Evaluation\n\n## 4.1 MOE Analysis for Demographic Variables\n\n**Your Task:** Examine margins of error for demographic variables to see if some communities have less reliable data.\n\n**Requirements:**\n- Calculate MOE percentages for each demographic variable\n- Flag tracts where any demographic variable has MOE > 15%\n- Create summary statistics\n\n **Calculate MOE percentages for white, Black, and Hispanic variables Hint: use the same formula as before (margin/estimate * 100)**\n\n**Create a flag for tracts with high MOE on any demographic variable Use logical operators (| for OR) in an ifelse() statement**\n\n **Create summary statistics showing how many tracts have data quality issues**\n\n```{r}\n# ---- 4.1: MOE analysis for demographic variables ----\n\n# Safety: ensure tract_demo exists\nstopifnot(exists(\"tract_demo\"))\n\ntract_moe <- tract_demo %>%\n  dplyr::mutate(\n    # MOE% for each group (only when estimate > 0 and MOE available)\n    white_moe_pct    = dplyr::if_else(!is.na(white_nhE)  & white_nhE  > 0 & !is.na(white_nhM),\n                                      100 * white_nhM  / white_nhE,  NA_real_),\n    black_moe_pct    = dplyr::if_else(!is.na(black_nhE)  & black_nhE  > 0 & !is.na(black_nhM),\n                                      100 * black_nhM  / black_nhE,  NA_real_),\n    hispanic_moe_pct = dplyr::if_else(!is.na(hispanicE)  & hispanicE  > 0 & !is.na(hispanicM),\n                                      100 * hispanicM  / hispanicE,  NA_real_),\n\n    # Per-group >15% flags\n    over15_white = white_moe_pct    > 15,\n    over15_black = black_moe_pct    > 15,\n    over15_hisp  = hispanic_moe_pct > 15,\n\n    # Any group over threshold\n    high_moe_flag = over15_white | over15_black | over15_hisp\n  )\n\n# Overall summary\ntract_moe_summary <- tract_moe %>%\n  dplyr::summarise(\n    total_tracts    = dplyr::n(),\n    high_moe_tracts = sum(high_moe_flag, na.rm = TRUE),\n    pct_high_moe    = round(100 * high_moe_tracts / total_tracts, 1),\n    # count tracts where at least one MOE% couldn't be computed\n    any_moe_na      = sum(is.na(white_moe_pct) | is.na(black_moe_pct) | is.na(hispanic_moe_pct))\n  )\n\nknitr::kable(\n  tract_moe_summary,\n  digits = 1,\n  caption = \"Summary of high-MOE tracts (ACS 2018–2022 5-year)\"\n)\n\n```\n\n\n\n## 4.2 Pattern Analysis\n\n**Your Task:** Investigate whether data quality problems are randomly distributed or concentrated in certain types of communities.\n\n **Group tracts by whether they have high MOE issues. Calculate average characteristics for each group:population size, demographic percentages** \n\n **Use group_by() and summarize() to create this comparison. Create a professional table showing the pattern**\n\n\n```{r}\n# ---- 4.2A: Compare tracts with vs. without high MOE issues ----\n\npattern_analysis <- tract_moe %>%\n  dplyr::group_by(high_moe_flag) %>%\n  dplyr::summarise(\n    n_tracts         = dplyr::n(),\n    avg_pop          = mean(total_popE, na.rm = TRUE),\n    avg_pct_white    = mean(pct_white_nh, na.rm = TRUE),\n    avg_pct_black    = mean(pct_black_nh, na.rm = TRUE),\n    avg_pct_hispanic = mean(pct_hispanic, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n\nknitr::kable(\n  pattern_analysis,\n  digits = 1,\n  col.names = c(\"High MOE Flag\", \"Tracts\", \"Avg Pop\",\n                \"Avg % White (NH)\", \"Avg % Black (NH)\", \"Avg % Hispanic\"),\n  caption = \"Comparison of tracts with vs. without high MOE issues\"\n)\n\n# ---- 4.2B: Count MOE>15% flags by county ----\n\nflags_by_county <- tract_moe %>%\n  dplyr::group_by(county_label) %>%\n  dplyr::summarise(\n    white_flags    = sum(over15_white,    na.rm = TRUE),\n    black_flags    = sum(over15_black,    na.rm = TRUE),\n    hispanic_flags = sum(over15_hisp,     na.rm = TRUE),\n    total_tracts   = dplyr::n(),\n    any_high_moe   = sum(high_moe_flag,   na.rm = TRUE),\n    pct_flagged    = round(100 * any_high_moe / total_tracts, 1),\n    .groups = \"drop\"\n  ) %>%\n  dplyr::arrange(dplyr::desc(pct_flagged))\n\nknitr::kable(\n  flags_by_county,\n  digits = 1,\n  caption = \"Tracts with MOE% > 15% by county (counts and % of tracts flagged)\"\n)\n\n```\n\n\n**Pattern Analysis:** [In rural counties like Greene and Hamilton, ACS reliability issues fall disproportionately on minority groups: nearly every Black and Hispanic estimate is flagged as unreliable, while White estimates are more stable. In contrast, in Kings County (Brooklyn), almost every tract shows MOEs above 15% for all racial/ethnic groups (White ≈91%, Black ≈88%, Hispanic ≈96%). This demonstrates that in small-population counties, unreliability is concentrated on underrepresented groups, while in large urban counties the problem is structural to the tract-level ACS — margins of error are high across the board. For policy and algorithmic applications, this means that minority communities in rural areas risk being systematically undercounted, while in urban areas all groups are at risk of noisy estimates that could mislead algorithmic decision-making\n\n\n# Part 5: Policy Recommendations\n\n## 5.1 Analysis Integration and Professional Summary\n\n**Your Task:** Write an executive summary that integrates findings from all four analyses.\n\n**Executive Summary Requirements:**\n1. **Overall Pattern Identification**: What are the systematic patterns across all your analyses?\n2. **Equity Assessment**: Which communities face the greatest risk of algorithmic bias based on your findings?\n3. **Root Cause Analysis**: What underlying factors drive both data quality issues and bias risk?\n4. **Strategic Recommendations**: What should the Department implement to address these systematic issues?\n\n**Executive Summary:**\n\nThis analysis of American Community Survey (ACS) data for New York counties reveals a striking divergence between county-level reliability and tract-level detail. At the county scale, median household income estimates are generally robust: the majority of counties fall within the “High Confidence” category (MOE < 5%), and even in New York City’s Kings County the median income estimate is highly reliable. However, when we move to tract-level race and ethnicity measures, margins of error grow dramatically. Across the selected counties, nearly all tracts report at least one racial/ethnic estimate with MOE greater than 15%, demonstrating that while income data is dependable for algorithmic policy use, subgroup demographic data is far more uncertain.\n\nThe communities most at risk of algorithmic bias differ by geography. In rural counties such as Greene and Hamilton, small minority populations produce unstable estimates, leading to systematically unreliable data for Black and Hispanic residents. In contrast, in large urban counties like Kings, data quality issues are not confined to minority groups—margins of error are high for nearly all racial/ethnic categories. Thus, while statewide income thresholds could be applied equitably, any algorithm that targets resources based on racial composition at the tract level risks disproportionately misclassifying both rural minority communities and dense urban neighborhoods.\n\nThe root causes of these quality issues stem from the ACS’s design. The survey is sample-based, and smaller geographies such as census tracts often have limited sample sizes. This yields stable estimates for broadly distributed characteristics like total population or income, but highly uncertain estimates for smaller subgroups. The result is that variables most relevant to equity and inclusion—race and ethnicity—are precisely those with the least reliable data. This structural limitation increases the risk that automated decision-making systems will entrench inequities rather than reduce them.\n\nTo mitigate these risks, the Department should adopt a layered strategy. First, continue to use county-level median income data for resource allocation, where confidence is high. Second, treat tract-level demographic estimates with caution: use them only in conjunction with safeguards such as minimum population thresholds or higher-level geographic aggregation. Third, flag tracts where margins of error exceed set thresholds for manual review rather than algorithmic assignment. Finally, pair ACS data with supplemental sources—administrative records, local surveys, or community-based reporting—to ensure that equity-sensitive decisions are not based solely on unreliable estimates. Taken together, these measures will allow the Department to leverage ACS data responsibly while minimizing the risks of algorithmic biase\n\n## 6.3 Specific Recommendations\n\n**Your Task:** Create a decision framework for algorithm implementation.\n\n```{r}\n# ---- Decision framework table (minimal + robust) ----\nlibrary(dplyr)\nlibrary(knitr)\n\ndecision_tbl <- county_reliability %>%\n  # keep rows where we can actually decide something\n  filter(!is.na(med_incomeE), !is.na(income_moe_pct)) %>%\n  # If your data already has `reliability`, we’ll use it; otherwise derive it from MOE%\n  mutate(\n    reliability = case_when(\n      !is.na(reliability) ~ reliability,\n      income_moe_pct <= 5     ~ \"High Confidence\",\n      income_moe_pct <= 10    ~ \"Moderate Confidence\",\n      TRUE                    ~ \"Low Confidence\"\n    ),\n    # Map reliability -> implementation recommendation\n    recommendation = case_when(\n      reliability == \"High Confidence\"      ~ \"Safe for algorithmic decisions\",\n      reliability == \"Moderate Confidence\"  ~ \"Use with caution - monitor outcomes\",\n      reliability == \"Low Confidence\"       ~ \"Requires manual review or additional data\",\n      TRUE                                  ~ \"Review needed\"\n    ),\n    # Pretty formatting for display only\n    `Median income ($)` = formatC(med_incomeE, format = \"f\", digits = 0, big.mark = \",\"),\n    `Income MOE %` = sprintf(\"%.1f%%\", income_moe_pct),\n    # Order rows by reliability (High → Moderate → Low)\n    reliability = factor(reliability, levels = c(\"High Confidence\",\"Moderate Confidence\",\"Low Confidence\"))\n  ) %>%\n  transmute(\n    County = county,\n    `Median income ($)`,\n    `Income MOE %`,\n    Reliability = reliability,\n    Recommendation = recommendation\n  ) %>%\n  arrange(Reliability, County)\n\nknitr::kable(\n  decision_tbl,\n  caption = \"Decision Framework for Algorithm Implementation (ACS 2022 5-year)\"\n)\n```\n**Key Recommendations:**\n\n**Your Task:** Use your analysis results to provide specific guidance to the department.\n\n1. **Counties suitable for immediate algorithmic implementation:** Counties with High Confidence median income data, such as Kings County, are appropriate for algorithmic targeting when the policy is tied to income thresholds. Median household income estimates here have margins of error well under 5%, which provides sufficient reliability for resource allocation decisions. However, even in these counties, subgroup race/ethnicity estimates should not be used as standalone inputs given their high margins of error.\n\n2. **Counties requiring additional oversight:** Counties with Moderate Confidence income estimates, such as Greene County, can be incorporated into algorithmic systems only with safeguards. Algorithms should flag Greene’s tracts for periodic review and be supplemented with monitoring of outcomes to ensure that borderline or unstable estimates do not result in systematic underfunding. Oversight might include comparing ACS estimates with administrative data or community-level surveys on a recurring basis.\n\n3. **Counties needing alternative approaches:** Counties with Low Confidence data, such as Hamilton County, should not be subject to fully automated decision-making. Here, the small population base yields large margins of error that make both income and subgroup data unreliable. Policy in these counties should rely on manual review, qualitative assessments from local agencies, or additional data collection (e.g., oversampling or local needs assessments) before allocating funds\n\n## Questions for Further Investigation\n\n[List 2-3 questions that your analysis raised that you'd like to explore further in future assignments. Consider questions about spatial patterns, time trends, or other demographic factors.]\n\n1. Spatial patterns: Do tracts with high MOE cluster geographically (e.g., in rural versus urban areas), and how might these clusters bias statewide resource allocation?\n\n2. Time trends: How stable are ACS estimates over multiple 5-year periods, and could temporal averaging reduce the volatility of tract-level race/ethnicity estimates?\n\n3. Alternative data sources: Could administrative records (e.g., SNAP enrollment, school free-lunch participation) provide more reliable indicators of local need than ACS tract-level subgroup data?\n\n## Technical Notes\n\n**Data Sources**:\n\nU.S. Census Bureau, American Community Survey (ACS) 2018–2022 5-Year Estimates\n\nData retrieved using the tidycensus R package on 4.5.1\n\n**Reproducibility**\n\nAll analysis conducted in R version [insert version, e.g., 4.3.2]\n\nRequired packages: tidycensus, tidyverse, knitr, stringr\n\nA valid Census API key is required; results can be replicated by loading the same variables and geographies for ACS 5-year 2022\n\nComplete code and documentation are available at: [your portfolio URL]\n\n**Methodology Notes**\n\nCounty-level income and population estimates were retrieved in “wide” format to simplify margin of error calculations.\n\nReliability categories were created using thresholds (<5% = High, 5–10% = Moderate, >10% = Low).\n\nCounties were selected for tract-level analysis to represent different reliability levels (Kings = high, Greene = moderate, Hamilton = low).\n\nTract-level race/ethnicity percentages were calculated by dividing group counts by total population, then multiplying by 100.\n\nCounty labels for tracts were assigned using official FIPS codes rather than string parsing to avoid NA parsing issues.\n\nHigh MOE flags were set at 15% for subgroup demographics, following common practice in ACS data quality analysis.\n\n**Limitations**\n\nACS estimates are based on sample surveys and are subject to sampling error; margins of error can be especially large for small populations and detailed subgroups.\n\nTract-level data for race/ethnicity is particularly volatile; nearly all tracts in Kings County showed MOE% > 15%.\n\nRural counties (e.g., Hamilton) have very small populations, making subgroup estimates unreliable or unavailable.\n\nTemporal limitations: results are based on the 2018–2022 5-year ACS and may not reflect more recent economic or demographic shifts.\n\nGeographic limitations: analysis focused on New York; findings may not generalize to other states without adjustment for local context.\n\n---\n\n## Submission Checklist\n\nBefore submitting your portfolio link on Canvas:\n\n- [ ] All code chunks run without errors\n- [ ] All \"[Fill this in]\" prompts have been completed\n- [ ] Tables are properly formatted and readable\n- [ ] Executive summary addresses all four required components\n- [ ] Portfolio navigation includes this assignment\n- [ ] Census API key is properly set \n- [ ] Document renders correctly to HTML\n\n**Remember:** Submit your portfolio URL on Canvas, not the file itself. Your assignment should be accessible at `your-portfolio-url/assignments/assignment_1/your_file_name.html`\n\n```{r}\nlibrary(knitr)\nprint(kable(data.frame(A=1:3, B=c(\"x\",\"y\",\"z\")),\n            caption = \"Sanity check: if you see this, Quarto is printing tables\"))\n\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"assignment_1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.24","theme":"cosmo","title":"Assignment 1: Census Data Quality for Policy Decisions","subtitle":"Evaluating Data Reliability for Algorithmic Decision-Making","author":"Sam Sen","date":"today","toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}