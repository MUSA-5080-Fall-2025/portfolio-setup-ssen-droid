{"title":"Spatial Data & GIS Operations in R","markdown":{"yaml":{"title":"Spatial Data & GIS Operations in R","subtitle":"Week 4: MUSA 5080","author":"Dr. Elizabeth Delmelle","date":"September 29, 2025","format":{"revealjs":{"theme":"simple","slide-number":true,"chalkboard":true,"code-line-numbers":true,"incremental":false,"smaller":true}}},"headingText":"Today's Agenda","containsRefs":false,"markdown":"\n\n\n## What We'll Cover\n\n<div class=\"columns\">\n<div class=\"column\" style=\"width:50%;\">\n\n**Spatial Data Fundamentals** \n\n- Vector data model and sf objects\n- Reading and inspecting spatial data\n- Basic spatial data operations\n\n**Spatial Operations**  \n\n- Spatial subsetting and filtering\n- Spatial joins and relationships\n- Measuring distances and areas\n\n</div><div class=\"column\" style=\"width:50%;\">\n\n**Geometry Operations** \n\n- Buffers, intersections, and unions\n- Spatial aggregation\n\n**Coordinate Systems** \n\n- Understanding projections\n- Transforming between coordinate systems\n</div></div>\n---\n\n# Part 1: Why Spatial Analysis Matters\n\n## From Last Week's Census Data...\n\n**You've been working with:**\n\n- County-level demographic data\n- Income, education, population patterns\n- Data quality and reliability analysis\n\n**Missing piece:** **WHERE** are these patterns occurring?\n\n**This week:** Add the spatial dimension to understand:\n\n- Geographic clustering of problems\n- Spatial relationships between communities\n- Access to services and resources\n\n## Real Policy Questions Need Spatial Answers\n\n**\"Which communities have the lowest income?\"**\n\n→ *Are they clustered? Isolated? Near resources?*\n\n**\"Where should we locate a new health clinic?\"**\n\n→ *Optimize access for underserved populations*\n\n**\"How do school districts compare?\"**\n\n→ *Account for geographic boundaries and spillovers*\n\n**\"Is there environmental justice concern?\"**\n\n→ *Do pollution sources cluster near vulnerable communities?*\n\n## Spatial Analysis and Algorithmic Bias\n\n**Geographic bias in algorithms:**\n\n- Training data may under-represent certain areas\n- Spatial autocorrelation violates independence assumptions\n- Service delivery algorithms may reinforce geographic inequities\n\n**Examples:**\n\n- Rideshare algorithms avoiding certain neighborhoods\n- Crime prediction concentrating enforcement in specific areas\n- Social service algorithms missing rural communities\n\n**Your role:** Understand spatial patterns to design fairer systems\n\n---\n# Part 2: Spatial Data Fundamentals\n\n## Vector Data Model\n\n**Real world → Simplified geometric representations**\n\n**Three basic types:**\n\n- **Points** → Locations (schools, hospitals, crime incidents)\n- **Lines** → Linear features (roads, rivers, transit routes)  \n- **Polygons** → Areas (census tracts, neighborhoods, service areas)\n\n**Each feature has:**\n\n- **Geometry** → Shape and location\n- **Attributes** → Data about that feature (population, income, etc.)\n\n## The sf Package: Simple Features for R\n\n**Why sf?**\n\n- Modern replacement for older spatial packages\n- Integrates with tidyverse workflows\n- Follows international standards\n- Fast and reliable\n\n**Key principle:** Spatial data is just data.frame + geometry column\n\n## Loading Spatial Data\n\n**Common spatial data formats:**\n\n- **Shapefiles** (.shp + supporting files)\n- **GeoJSON** (.geojson)\n- **KML/KMZ** (Google Earth)\n- **Database connections** (PostGIS)\n\n***examples in corresponding code***\n\n---\n\n# Part 3: Spatial Operations\n\n## Spatial Subsetting\n\n**Extract features based on spatial relationships**\n\n***examples in code***\n\n**Key functions:** `st_filter()`, `st_intersects()`, `st_touches()`, `st_within()`\n\n## Understanding the .predicate Parameter\n\n**The `.predicate` tells `st_filter()` what spatial relationship to look for:**\n\n```r predicate-structure\n# Basic structure:\nst_filter(data_to_filter, reference_geometry, .predicate = relationship)\n```\n\n**Different questions need different relationships:**\n\n- **\"Which counties border Allegheny?\"** → `st_touches`\n- **\"Which tracts are IN Allegheny?\"** → `st_within`  \n- **\"Which tracts overlap a metro area?\"** → `st_intersects`\n\n**Default:** If no `.predicate` specified, uses `st_intersects`\n\n## Why .predicate Matters: Visual Example\n\n**For county neighbors, why `st_touches` not `st_intersects`?**\n\n\n***example in code***\n\nst_intersects includes the reference feature itself!\n\n## Spatial Relationships: When to Use Each\n\n| Predicate | Definition | Policy Use Case |\n|-----------|------------|-----------------|\n| `st_intersects()` | Any overlap at all | \"Counties affected by flooding\" |\n| `st_touches()` | Share boundary, no interior overlap | \"Neighboring counties\" |\n| `st_within()` | Completely inside | \"Schools within district boundaries\" |\n| `st_contains()` | Completely contains | \"Districts containing hospitals\" |\n| `st_overlaps()` | Partial overlap | \"Overlapping service areas\" |\n| `st_disjoint()` | No spatial relationship | \"Counties separate from urban areas\" |\n\n**Most common:** `st_intersects()` (any overlap) and `st_touches()` (neighbors)\n\n## Predicate Examples with Code\n\n\n\n## Spatial Joins\n\n**Combine datasets based on spatial relationships**\n\n***examples in codes***\n\n\n## Distance Calculations\n\n***examples in codes***\n\n## Area Calculations\n\n`{r areas}\n# Calculate county areas\n\n***examples in codes***\n\n**Important:** Units depend on coordinate reference system!\n\n# A note about that (.)\n\nThe dot (.) is a placeholder that represents the data being passed through the pipe (%>%).\n\npa_counties <- pa_counties %>%\n  mutate(\n    area_sqkm = as.numeric(st_area(.)) / 1000000\n  )\n  \nThe . refers to `pa_counties` - the data frame being passed through the pipe.\nSo this is equivalent to:\n\npa_counties <- pa_counties %>%\n  mutate(\n    area_sqkm = as.numeric(st_area(pa_counties)) / 1000000\n  )\n\n---\n\n\n# Part 4: Geometry Operations\n\n## Buffer Operations\n\n**Create zones around features**\n\n`{r buffers}\n# 10km buffer around all hospitals\nhospital_buffers <- hospitals %>%\n  st_buffer(dist = 10000)  # 10,000 meters\n\n# Different buffer sizes by hospital type\nhospital_buffers <- hospitals %>%\n  mutate(\n    buffer_size = case_when(\n      type == \"Major Medical Center\" ~ 15000,\n      type == \"Community Hospital\" ~ 10000,\n      type == \"Clinic\" ~ 5000\n    )\n  ) %>%\n  st_buffer(dist = .$buffer_size)\n`\n\n**Policy application:** Service accessibility zones, environmental impact areas\n\n## Intersection Operations\n\n**Find overlapping areas**\n\nThe Key Difference `st_filter()` with predicates: \nSelects complete features (keeps or removes entire rows)\n\n`st_intersection()` and `st_union()`: Modifies geometries (creates new shapes)\n\n## When to Use Each\nUse `st_filter()` when:\n\n- \"Which census tracts touch hospital service areas?\"\n- You want to select/identify features based on location\n- You need complete features with their original boundaries\n- You're counting: \"How many tracts are near hospitals?\"\n\nUse `st_intersection()` when:\n\n- \"What is the area of overlap between tracts and service zones?\"\n- You need to calculate areas, populations, or other measures within specific boundaries\n- You're doing spatial overlay analysis\n- You need to clip data to a study area\n\n## Union Operations\n\n**Combine multiple features into one**\n\n\n\n## Spatial Aggregation\n\n**Summarize data across spatial boundaries**\n\n\n---\n\n# Part 5: Coordinate Reference Systems\n\n## Why Projections Matter\n\n**The Earth is round, maps are flat**\n\n**Problems:**\n\n- Can't preserve area, distance, and angles simultaneously\n- Different projections optimize different properties\n- Wrong projection → wrong analysis results!\n\n**Example:** Measuring areas in latitude/longitude gives wrong answers\n\n## Geographic vs. Projected Coordinates\n\n**Geographic Coordinate Systems (GCS):**\n\n- Latitude/longitude coordinates\n- Units: decimal degrees\n- Good for: Global datasets, web mapping\n- Bad for: Area/distance calculations\n\n**Projected Coordinate Systems (PCS):**\n\n- X/Y coordinates on a flat plane\n- Units: meters, feet, etc.\n- Good for: Local analysis, accurate measurements\n- Bad for: Large areas, global datasets\n\n## Common Coordinate Reference Systems\n\n**WGS84 (EPSG:4326)** \n\n- GPS standard, global coverage\n- Geographic system (lat/lon)\n- Good for web mapping, data sharing\n\n**Web Mercator (EPSG:3857)** \n\n- Web mapping standard\n- Projected system\n- Heavily distorts areas near poles\n\n**State Plane / UTM zones** \n\n- Local accuracy\n- Different zones for different regions\n- Optimized for specific geographic areas\n\n**Albers Equal Area**\n\n- Preserves area\n- Good for demographic/statistical analysis\n\n## Checking and Setting CRS\n\n\n*To simply check current CRS*\n`st_crs(pa_counties)`\n\n*To set CRS (ONLY if missing)*\n`pa_counties <- st_set_crs(pa_counties, 4326)`\n\n*Transform to different CRS*\n\n***Pennsylvania South State Plane (good for PA analysis)***\n\n`pa_counties_projected <- pa_counties %>%\n  st_transform(crs = 3365)`\n\n*Transform to Albers Equal Area (good for area calculations)*\n`pa_counties_albers <- pa_counties %>%\n  st_transform(crs = 5070)`\n`\n\n## When to Transform\n\n**Transform when:**\n\n- Calculating areas or distances\n- Creating buffers\n- Doing geometric operations\n- Working with local/regional data\n\n## Live Demo: Projection Effects\n\n\n---\n\n# Part 6: Putting It All Together\n\n## Policy Analysis Workflow\n\n**Typical spatial analysis steps:**\n\n1. **Load data** → Get spatial boundaries and attribute data\n2. **Check projections** → Transform to appropriate CRS\n3. **Join datasets** → Combine spatial and non-spatial data\n4. **Spatial operations** → Buffers, intersections, distance calculations\n5. **Aggregation** → Summarize across spatial units\n6. **Visualization** → Maps and charts\n7. **Interpretation** → Policy recommendations\n\n## Example: Healthcare Access Analysis\n\n**Research question:** Which communities have poor access to healthcare?\n\n*Step 1: Load data*\n\n*Step 2: Transform to local projection*\n\ncounties <- st_transform(counties, 3365)\nhospitals <- st_transform(hospitals, 3365)\n\n*Step 3: Calculate access*\n\nhospital_buffers <- hospitals %>%\n  st_buffer(dist = 25000)  # 25km access zone\n\ncounty_access <- counties %>%\n  mutate(\n    has_hospital = st_intersects(., st_union(hospital_buffers), sparse = FALSE),\n    distance_to_nearest = as.numeric(st_distance(st_centroid(.), hospitals))\n  )\n\n*Step 4: Join with demographic data and analyze*\n\n---\n\n","srcMarkdownNoYaml":"\n\n# Today's Agenda\n\n## What We'll Cover\n\n<div class=\"columns\">\n<div class=\"column\" style=\"width:50%;\">\n\n**Spatial Data Fundamentals** \n\n- Vector data model and sf objects\n- Reading and inspecting spatial data\n- Basic spatial data operations\n\n**Spatial Operations**  \n\n- Spatial subsetting and filtering\n- Spatial joins and relationships\n- Measuring distances and areas\n\n</div><div class=\"column\" style=\"width:50%;\">\n\n**Geometry Operations** \n\n- Buffers, intersections, and unions\n- Spatial aggregation\n\n**Coordinate Systems** \n\n- Understanding projections\n- Transforming between coordinate systems\n</div></div>\n---\n\n# Part 1: Why Spatial Analysis Matters\n\n## From Last Week's Census Data...\n\n**You've been working with:**\n\n- County-level demographic data\n- Income, education, population patterns\n- Data quality and reliability analysis\n\n**Missing piece:** **WHERE** are these patterns occurring?\n\n**This week:** Add the spatial dimension to understand:\n\n- Geographic clustering of problems\n- Spatial relationships between communities\n- Access to services and resources\n\n## Real Policy Questions Need Spatial Answers\n\n**\"Which communities have the lowest income?\"**\n\n→ *Are they clustered? Isolated? Near resources?*\n\n**\"Where should we locate a new health clinic?\"**\n\n→ *Optimize access for underserved populations*\n\n**\"How do school districts compare?\"**\n\n→ *Account for geographic boundaries and spillovers*\n\n**\"Is there environmental justice concern?\"**\n\n→ *Do pollution sources cluster near vulnerable communities?*\n\n## Spatial Analysis and Algorithmic Bias\n\n**Geographic bias in algorithms:**\n\n- Training data may under-represent certain areas\n- Spatial autocorrelation violates independence assumptions\n- Service delivery algorithms may reinforce geographic inequities\n\n**Examples:**\n\n- Rideshare algorithms avoiding certain neighborhoods\n- Crime prediction concentrating enforcement in specific areas\n- Social service algorithms missing rural communities\n\n**Your role:** Understand spatial patterns to design fairer systems\n\n---\n# Part 2: Spatial Data Fundamentals\n\n## Vector Data Model\n\n**Real world → Simplified geometric representations**\n\n**Three basic types:**\n\n- **Points** → Locations (schools, hospitals, crime incidents)\n- **Lines** → Linear features (roads, rivers, transit routes)  \n- **Polygons** → Areas (census tracts, neighborhoods, service areas)\n\n**Each feature has:**\n\n- **Geometry** → Shape and location\n- **Attributes** → Data about that feature (population, income, etc.)\n\n## The sf Package: Simple Features for R\n\n**Why sf?**\n\n- Modern replacement for older spatial packages\n- Integrates with tidyverse workflows\n- Follows international standards\n- Fast and reliable\n\n**Key principle:** Spatial data is just data.frame + geometry column\n\n## Loading Spatial Data\n\n**Common spatial data formats:**\n\n- **Shapefiles** (.shp + supporting files)\n- **GeoJSON** (.geojson)\n- **KML/KMZ** (Google Earth)\n- **Database connections** (PostGIS)\n\n***examples in corresponding code***\n\n---\n\n# Part 3: Spatial Operations\n\n## Spatial Subsetting\n\n**Extract features based on spatial relationships**\n\n***examples in code***\n\n**Key functions:** `st_filter()`, `st_intersects()`, `st_touches()`, `st_within()`\n\n## Understanding the .predicate Parameter\n\n**The `.predicate` tells `st_filter()` what spatial relationship to look for:**\n\n```r predicate-structure\n# Basic structure:\nst_filter(data_to_filter, reference_geometry, .predicate = relationship)\n```\n\n**Different questions need different relationships:**\n\n- **\"Which counties border Allegheny?\"** → `st_touches`\n- **\"Which tracts are IN Allegheny?\"** → `st_within`  \n- **\"Which tracts overlap a metro area?\"** → `st_intersects`\n\n**Default:** If no `.predicate` specified, uses `st_intersects`\n\n## Why .predicate Matters: Visual Example\n\n**For county neighbors, why `st_touches` not `st_intersects`?**\n\n\n***example in code***\n\nst_intersects includes the reference feature itself!\n\n## Spatial Relationships: When to Use Each\n\n| Predicate | Definition | Policy Use Case |\n|-----------|------------|-----------------|\n| `st_intersects()` | Any overlap at all | \"Counties affected by flooding\" |\n| `st_touches()` | Share boundary, no interior overlap | \"Neighboring counties\" |\n| `st_within()` | Completely inside | \"Schools within district boundaries\" |\n| `st_contains()` | Completely contains | \"Districts containing hospitals\" |\n| `st_overlaps()` | Partial overlap | \"Overlapping service areas\" |\n| `st_disjoint()` | No spatial relationship | \"Counties separate from urban areas\" |\n\n**Most common:** `st_intersects()` (any overlap) and `st_touches()` (neighbors)\n\n## Predicate Examples with Code\n\n\n\n## Spatial Joins\n\n**Combine datasets based on spatial relationships**\n\n***examples in codes***\n\n\n## Distance Calculations\n\n***examples in codes***\n\n## Area Calculations\n\n`{r areas}\n# Calculate county areas\n\n***examples in codes***\n\n**Important:** Units depend on coordinate reference system!\n\n# A note about that (.)\n\nThe dot (.) is a placeholder that represents the data being passed through the pipe (%>%).\n\npa_counties <- pa_counties %>%\n  mutate(\n    area_sqkm = as.numeric(st_area(.)) / 1000000\n  )\n  \nThe . refers to `pa_counties` - the data frame being passed through the pipe.\nSo this is equivalent to:\n\npa_counties <- pa_counties %>%\n  mutate(\n    area_sqkm = as.numeric(st_area(pa_counties)) / 1000000\n  )\n\n---\n\n\n# Part 4: Geometry Operations\n\n## Buffer Operations\n\n**Create zones around features**\n\n`{r buffers}\n# 10km buffer around all hospitals\nhospital_buffers <- hospitals %>%\n  st_buffer(dist = 10000)  # 10,000 meters\n\n# Different buffer sizes by hospital type\nhospital_buffers <- hospitals %>%\n  mutate(\n    buffer_size = case_when(\n      type == \"Major Medical Center\" ~ 15000,\n      type == \"Community Hospital\" ~ 10000,\n      type == \"Clinic\" ~ 5000\n    )\n  ) %>%\n  st_buffer(dist = .$buffer_size)\n`\n\n**Policy application:** Service accessibility zones, environmental impact areas\n\n## Intersection Operations\n\n**Find overlapping areas**\n\nThe Key Difference `st_filter()` with predicates: \nSelects complete features (keeps or removes entire rows)\n\n`st_intersection()` and `st_union()`: Modifies geometries (creates new shapes)\n\n## When to Use Each\nUse `st_filter()` when:\n\n- \"Which census tracts touch hospital service areas?\"\n- You want to select/identify features based on location\n- You need complete features with their original boundaries\n- You're counting: \"How many tracts are near hospitals?\"\n\nUse `st_intersection()` when:\n\n- \"What is the area of overlap between tracts and service zones?\"\n- You need to calculate areas, populations, or other measures within specific boundaries\n- You're doing spatial overlay analysis\n- You need to clip data to a study area\n\n## Union Operations\n\n**Combine multiple features into one**\n\n\n\n## Spatial Aggregation\n\n**Summarize data across spatial boundaries**\n\n\n---\n\n# Part 5: Coordinate Reference Systems\n\n## Why Projections Matter\n\n**The Earth is round, maps are flat**\n\n**Problems:**\n\n- Can't preserve area, distance, and angles simultaneously\n- Different projections optimize different properties\n- Wrong projection → wrong analysis results!\n\n**Example:** Measuring areas in latitude/longitude gives wrong answers\n\n## Geographic vs. Projected Coordinates\n\n**Geographic Coordinate Systems (GCS):**\n\n- Latitude/longitude coordinates\n- Units: decimal degrees\n- Good for: Global datasets, web mapping\n- Bad for: Area/distance calculations\n\n**Projected Coordinate Systems (PCS):**\n\n- X/Y coordinates on a flat plane\n- Units: meters, feet, etc.\n- Good for: Local analysis, accurate measurements\n- Bad for: Large areas, global datasets\n\n## Common Coordinate Reference Systems\n\n**WGS84 (EPSG:4326)** \n\n- GPS standard, global coverage\n- Geographic system (lat/lon)\n- Good for web mapping, data sharing\n\n**Web Mercator (EPSG:3857)** \n\n- Web mapping standard\n- Projected system\n- Heavily distorts areas near poles\n\n**State Plane / UTM zones** \n\n- Local accuracy\n- Different zones for different regions\n- Optimized for specific geographic areas\n\n**Albers Equal Area**\n\n- Preserves area\n- Good for demographic/statistical analysis\n\n## Checking and Setting CRS\n\n\n*To simply check current CRS*\n`st_crs(pa_counties)`\n\n*To set CRS (ONLY if missing)*\n`pa_counties <- st_set_crs(pa_counties, 4326)`\n\n*Transform to different CRS*\n\n***Pennsylvania South State Plane (good for PA analysis)***\n\n`pa_counties_projected <- pa_counties %>%\n  st_transform(crs = 3365)`\n\n*Transform to Albers Equal Area (good for area calculations)*\n`pa_counties_albers <- pa_counties %>%\n  st_transform(crs = 5070)`\n`\n\n## When to Transform\n\n**Transform when:**\n\n- Calculating areas or distances\n- Creating buffers\n- Doing geometric operations\n- Working with local/regional data\n\n## Live Demo: Projection Effects\n\n\n---\n\n# Part 6: Putting It All Together\n\n## Policy Analysis Workflow\n\n**Typical spatial analysis steps:**\n\n1. **Load data** → Get spatial boundaries and attribute data\n2. **Check projections** → Transform to appropriate CRS\n3. **Join datasets** → Combine spatial and non-spatial data\n4. **Spatial operations** → Buffers, intersections, distance calculations\n5. **Aggregation** → Summarize across spatial units\n6. **Visualization** → Maps and charts\n7. **Interpretation** → Policy recommendations\n\n## Example: Healthcare Access Analysis\n\n**Research question:** Which communities have poor access to healthcare?\n\n*Step 1: Load data*\n\n*Step 2: Transform to local projection*\n\ncounties <- st_transform(counties, 3365)\nhospitals <- st_transform(hospitals, 3365)\n\n*Step 3: Calculate access*\n\nhospital_buffers <- hospitals %>%\n  st_buffer(dist = 25000)  # 25km access zone\n\ncounty_access <- counties %>%\n  mutate(\n    has_hospital = st_intersects(., st_union(hospital_buffers), sparse = FALSE),\n    distance_to_nearest = as.numeric(st_distance(st_centroid(.), hospitals))\n  )\n\n*Step 4: Join with demographic data and analyze*\n\n---\n\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdn.jsdelivr.net/npm/mathjax@2.7.9/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","incremental":false,"output-file":"week4_slides.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.8.24","auto-stretch":true,"title":"Spatial Data & GIS Operations in R","subtitle":"Week 4: MUSA 5080","author":"Dr. Elizabeth Delmelle","date":"September 29, 2025","theme":"simple","slideNumber":true,"chalkboard":true,"smaller":true}}},"projectFormats":["html"]}