{
  "hash": "e9152b164a087193f124c58a67d06836",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Assignment 2: Spatial Analysis and Visualization\"\nsubtitle: \"Healthcare Access and Equity in Pennsylvania\"\nauthor: Sam Sen\ndate: today\nformat: \n  html:\n    code-fold: false\n    toc: true\n    toc-location: left\n    theme: cosmo\n    embed-resources: true\nexecute:\n  warning: false\n  message: false\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add this near the top of your .qmd after loading libraries\noptions(tigris_use_cache = TRUE)\noptions(tigris_progress = FALSE)  # Suppress tigris progress bars\n```\n:::\n\n\n\n## Assignment Overview\n\n**Learning Objectives:**\n- Apply spatial operations to answer policy-relevant research questions\n- Integrate census demographic data with spatial analysis\n- Create publication-quality visualizations and maps\n- Work with spatial data from multiple sources\n- Communicate findings effectively for policy audiences\n\n---\n\n## Part 1: Healthcare Access for Vulnerable Populations\n\n### Research Question\n\n**Which Pennsylvania counties have the highest proportion of vulnerable populations (elderly + low-income) living far from hospitals?**\n\nYour analysis should identify counties that should be priorities for healthcare investment and policy intervention.\n\n### Required Analysis Steps\n\nComplete the following analysis, documenting each step with code and brief explanations:\n\n#### Step 1: Data Collection (5 points)\n\nLoad the required spatial data:\n- Pennsylvania county boundaries\n- Pennsylvania hospitals (from lecture data)\n- Pennsylvania census tracts\n\n**Your Task:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\nlibrary(tidyverse)    \nlibrary(sf)           \nlibrary(tidycensus)   \nlibrary(tigris)       \n```\n:::\n\n\n# Load spatial data\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pennsylvania county boundaries\npa_counties <- counties(state = \"PA\", cb = TRUE, year = 2022)\n\n# Pennsylvania hospitals (from lecture data)\nhospitals <- st_read(\"data/hospitals.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `hospitals' from data source \n  `C:\\Users\\16468\\OneDrive - PennO365\\Documents\\Academics\\MUSA\\Public_Policy_Analytics\\portfolio-setup-ssen-droid\\Assignments\\Assignment_2\\data\\hospitals.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 223 features and 11 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -80.49621 ymin: 39.75163 xmax: -74.86704 ymax: 42.13403\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Pennsylvania census tracts\npa_tracts <- tracts(state = \"PA\", cb = TRUE, year = 2022)\n```\n:::\n\n\n\n# Check that all data loaded correctly\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check that all data loaded correctly\n# Check basic structure and CRS\n\nprint(\"PA Counties:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"PA Counties:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"Number of counties:\", nrow(pa_counties)))  # Counts PA counties \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Number of counties: 67\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"CRS:\", st_crs(pa_counties)$input))        # Shows coordinate system for counties\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"CRS: NAD83\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"Hospitals:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Hospitals:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"Number of hospitals:\", nrow(hospitals)))   # Counts hospitals in the dataset\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Number of hospitals: 223\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"CRS:\", st_crs(hospitals)$input))          # Shows coordinate system for hospitals\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"CRS: WGS 84\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"PA Census Tracts:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"PA Census Tracts:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"Number of census tracts:\", nrow(pa_tracts)))  # Counts census tracts (should be ~3,000+)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Number of census tracts: 3445\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"CRS:\", st_crs(pa_tracts)$input))             # Shows coordinate system for tracts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"CRS: NAD83\"\n```\n\n\n:::\n:::\n\n\n---\n\n#### Step 2: Get Demographic Data \n\nUse `tidycensus` to download tract-level demographic data for Pennsylvania.\n\n**Required variables:**\n- Total population\n- Median household income\n- Population 65 years and over (you may need to sum multiple age categories)\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Get demographic data from ACS\n\n# Get tract-level demographic data for Pennsylvania\n# Get the elderly population data\n# We need to sum multiple age categories to get total 65+ population\npa_demographics_corrected <- get_acs(\n  geography = \"tract\",\n  variables = c(\n    total_pop = \"B01003_001\",           # Total population\n    median_income = \"B19013_001\",       # Median household income\n    # Age 65-69\n    age_65_69_male = \"B01001_020\",      # Male 65-69\n    age_65_69_female = \"B01001_044\",    # Female 65-69\n    # Age 70-74\n    age_70_74_male = \"B01001_021\",      # Male 70-74\n    age_70_74_female = \"B01001_045\",    # Female 70-74\n    # Age 75-79\n    age_75_79_male = \"B01001_022\",      # Male 75-79\n    age_75_79_female = \"B01001_046\",    # Female 75-79\n    # Age 80-84\n    age_80_84_male = \"B01001_023\",      # Male 80-84\n    age_80_84_female = \"B01001_047\",    # Female 80-84\n    # Age 85+\n    age_85_plus_male = \"B01001_024\",    # Male 85+\n    age_85_plus_female = \"B01001_048\"   # Female 85+\n  ),\n  state = \"PA\",\n  year = 2022,\n  output = \"wide\"\n)\n\n# Calculate total population 65+\npa_demographics_corrected <- pa_demographics_corrected %>%\n  mutate(\n    pop_65_plus_total = age_65_69_maleE + age_65_69_femaleE + \n                        age_70_74_maleE + age_70_74_femaleE +\n                        age_75_79_maleE + age_75_79_femaleE +\n                        age_80_84_maleE + age_80_84_femaleE +\n                        age_85_plus_maleE + age_85_plus_femaleE\n  )\n\n# Join to tract boundaries\npa_tracts_with_data <- pa_tracts %>%\n  left_join(pa_demographics_corrected, by = \"GEOID\")\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Question 1: What year of ACS data are you using?\nprint(\"Question 1: What year of ACS data are you using?\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Question 1: What year of ACS data are you using?\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(\"Answer: 2022 (we specified year = 2022 in get_acs())\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Answer: 2022 (we specified year = 2022 in get_acs())\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Question 2: How many tracts have missing income data?\nprint(\"Question 2: How many tracts have missing income data?\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Question 2: How many tracts have missing income data?\"\n```\n\n\n:::\n\n```{.r .cell-code}\nmissing_income <- sum(is.na(pa_tracts_with_data$median_incomeE))\nprint(paste(\"Answer:\", missing_income, \"tracts have missing income data\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Answer: 62 tracts have missing income data\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Question 3: What is the median income across all PA census tracts?\nprint(\"Question 3: What is the median income across all PA census tracts?\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Question 3: What is the median income across all PA census tracts?\"\n```\n\n\n:::\n\n```{.r .cell-code}\noverall_median_income <- median(pa_tracts_with_data$median_incomeE, na.rm = TRUE)\nprint(paste(\"Answer: $\", round(overall_median_income, 0), \"is the median income across all PA tracts\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Answer: $ 70188 is the median income across all PA tracts\"\n```\n\n\n:::\n:::\n\n\n---\n\n#### Step 3: Define Vulnerable Populations \n\nIdentify census tracts with vulnerable populations based on TWO criteria:\n1. Low median household income (choose an appropriate threshold)\n2. Significant elderly population (choose an appropriate threshold)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define vulnerable populations using quartile approach\nvulnerable_tracts <- pa_tracts_with_data %>%\n  mutate(\n    pct_elderly = (pop_65_plus_total / total_popE) * 100,\n    low_income = median_incomeE < 55924,           # Bottom quartile\n    high_elderly = pct_elderly >= 20.1,            # Top quartile\n    vulnerable = low_income & high_elderly\n  ) %>%\n  filter(!is.na(median_incomeE))\n\nprint(paste(\"Vulnerable tracts:\", sum(vulnerable_tracts$vulnerable, na.rm = TRUE)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Vulnerable tracts: 148\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"Percentage:\", round(sum(vulnerable_tracts$vulnerable, na.rm = TRUE) / nrow(vulnerable_tracts) * 100, 2), \"%\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Percentage: 4.37 %\"\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check the quartiles of each category\nsummary(vulnerable_tracts$median_incomeE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  11558   55924   70188   77527   93287  250001 \n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(vulnerable_tracts$pct_elderly)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00   12.49   16.53   16.54   20.11   63.07 \n```\n\n\n:::\n:::\n\n\n\n\n**Questions to answer:**\n\nIncome Threshold: I chose a median household income threshold of $55,924, representing the first quartile (bottom 25%) of income distribution across Pennsylvania census tracts. Elderly Population Threshold: I selected 20.1% as the threshold for significant elderly population, representing the third quartile (top 25%) of elderly population distribution. These quartile-based thresholds were chosen to identify the most vulnerable populations given limited city resources for healthcare investment. By focusing on tracts in both the bottom quartile for income and the top quartile for elderly population, we ensure that our analysis prioritizes areas with the greatest need—where financial barriers to healthcare access coincide with high concentrations of elderly residents who face increased healthcare needs. Results: Using these criteria, 148 census tracts representing 4.37% of Pennsylvania census tracts meet both vulnerability criteria. This focused approach allows policymakers to target resources toward communities where vulnerable populations are most concentrated.\n\n---\n\n#### Step 4: Calculate Distance to Hospitals \n\nFor each vulnerable tract, calculate the distance to the nearest hospital.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform to Pennsylvania South State Plane (EPSG:3365)\npa_counties_projected <- pa_counties %>%\n  st_transform(crs = 3365)\n\nhospitals_projected <- hospitals %>%\n  st_transform(crs = 3365)\n\n# Filter to vulnerable tracts and transform\nvulnerable_tracts_projected <- vulnerable_tracts %>%\n  filter(vulnerable == TRUE) %>%\n  st_transform(crs = 3365)\n```\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate distance from each vulnerable tract centroid to nearest hospital\nvulnerable_tract_centroids <- vulnerable_tracts_projected %>%\n  st_centroid()\n\nvulnerable_distances <- st_distance(vulnerable_tract_centroids, hospitals_projected)\n\nvulnerable_tracts_projected <- vulnerable_tracts_projected %>%\n  mutate(\n    dist_to_hospital_ft = as.numeric(apply(vulnerable_distances, 1, min)),\n    dist_to_hospital_mi = dist_to_hospital_ft / 5280\n  )\n\n# Summary statistics\navg_distance <- mean(vulnerable_tracts_projected$dist_to_hospital_mi, na.rm = TRUE)\nprint(paste(\"Average distance to nearest hospital:\", round(avg_distance, 2), \"miles\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Average distance to nearest hospital: 4.97 miles\"\n```\n\n\n:::\n\n```{.r .cell-code}\nmax_distance <- max(vulnerable_tracts_projected$dist_to_hospital_mi, na.rm = TRUE)\nprint(paste(\"Maximum distance:\", round(max_distance, 2), \"miles\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Maximum distance: 19.16 miles\"\n```\n\n\n:::\n\n```{.r .cell-code}\nfar_tracts <- sum(vulnerable_tracts_projected$dist_to_hospital_mi > 15, na.rm = TRUE)\nprint(paste(\"Vulnerable tracts more than 15 miles from hospital:\", far_tracts))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Vulnerable tracts more than 15 miles from hospital: 10\"\n```\n\n\n:::\n:::\n\n\n**Run these two chunks and let me know what you get!**\n\n**Summary:**\nProjection Choice: I used Pennsylvania South State Plane (EPSG:3365) because it's optimized for accurate   distance measurements within Pennsylvania. Unlike geographic coordinates (latitude/longitude) which measure in degrees, this projected coordinate system uses feet, allowing us to calculate actual distances in miles.\n\n- Average distance to nearest hospital: 4.97 miles  \n- Maximum distance: 19.16 miles \n- # of vulnerable tracts 15< miles away from hospital: 10 \n\n---\n\n#### Step 5: Identify Underserved Areas \n\nDefine \"underserved\" as vulnerable tracts that are more than 15 miles from the nearest hospital.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create underserved variable\nvulnerable_tracts_projected <- vulnerable_tracts_projected %>%\n  mutate(\n    underserved = dist_to_hospital_mi > 15\n  )\n\n# Summary statistics\nunderserved_count <- sum(vulnerable_tracts_projected$underserved, na.rm = TRUE)\nprint(paste(\"Underserved tracts:\", underserved_count))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Underserved tracts: 10\"\n```\n\n\n:::\n\n```{.r .cell-code}\npct_underserved <- (underserved_count / nrow(vulnerable_tracts_projected)) * 100\nprint(paste(\"Percentage of vulnerable tracts that are underserved:\", round(pct_underserved, 2), \"%\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Percentage of vulnerable tracts that are underserved: 6.76 %\"\n```\n\n\n:::\n:::\n\n10 tracts are undeserved representing ~7% of the population. This number is slightly lower than I expected, as I would expected a higher proportion of undeserved populations to have limited access to hospitals; however, this still represents thousands of undeserved and extremely vulnerable individuals. It is possible that that these individuals are located in rural areas. Since a majority of the vulnerable population does live within 15 miles of hospitals, it is possible that they are located in more urban envirornments. In the next steps we will examine the spaital aspects of these findings. \n\n---\n\n#### Step 6: Aggregate to County Level\n\nUse spatial joins and aggregation to calculate county-level statistics about vulnerable populations and hospital access.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Spatial join to match vulnerable tracts to their counties\nvulnerable_tracts_with_county <- vulnerable_tracts_projected %>%\n  st_join(pa_counties_projected, join = st_within)\n```\n:::\n\n\n# Aggregate statistics by county\n\n::: {.cell}\n\n```{.r .cell-code}\n# Aggregate statistics by county\ncounty_summary <- vulnerable_tracts_with_county %>%\n  st_drop_geometry() %>%\n  group_by(NAMELSAD.y) %>%\n  summarize(\n    num_vulnerable_tracts = n(),\n    num_underserved_tracts = sum(underserved, na.rm = TRUE),\n    pct_underserved = (num_underserved_tracts / num_vulnerable_tracts) * 100,\n    avg_distance_to_hospital = mean(dist_to_hospital_mi, na.rm = TRUE),\n    total_vulnerable_pop = sum(total_popE, na.rm = TRUE)\n  ) %>%\n  arrange(desc(pct_underserved))\n\n# Display results\nprint(county_summary)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 47 × 6\n   NAMELSAD.y       num_vulnerable_tracts num_underserved_tracts pct_underserved\n   <chr>                            <int>                  <int>           <dbl>\n 1 Bradford County                      1                      1           100  \n 2 Dauphin County                       1                      1           100  \n 3 Forest County                        1                      1           100  \n 4 Juniata County                       1                      1           100  \n 5 Monroe County                        1                      1           100  \n 6 Sullivan County                      1                      1           100  \n 7 Wayne County                         2                      1            50  \n 8 Potter County                        3                      1            33.3\n 9 Crawford County                      4                      1            25  \n10 Clearfield Coun…                     5                      1            20  \n# ℹ 37 more rows\n# ℹ 2 more variables: avg_distance_to_hospital <dbl>,\n#   total_vulnerable_pop <dbl>\n```\n\n\n:::\n:::\n\n\n\n**Required county-level statistics:**\n- Number of vulnerable tracts\n- Number of underserved tracts  \n- Percentage of vulnerable tracts that are underserved\n- Average distance to nearest hospital for vulnerable tracts\n- Total vulnerable population\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Top 5 counties by percentage of underserved vulnerable tracts\ntop_5_pct <- county_summary %>%\n  arrange(desc(pct_underserved)) %>%\n  head(5) %>%\n  select(NAMELSAD.y, num_vulnerable_tracts, num_underserved_tracts, pct_underserved)\n\nprint(\"Top 5 counties by percentage of underserved vulnerable tracts:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Top 5 counties by percentage of underserved vulnerable tracts:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(top_5_pct)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 4\n  NAMELSAD.y      num_vulnerable_tracts num_underserved_tracts pct_underserved\n  <chr>                           <int>                  <int>           <dbl>\n1 Bradford County                     1                      1             100\n2 Dauphin County                      1                      1             100\n3 Forest County                       1                      1             100\n4 Juniata County                      1                      1             100\n5 Monroe County                       1                      1             100\n```\n\n\n:::\n:::\n\n\nThe above table looks at the top 5 counties that have the highest percentage of underserved vulnerable tracts. However, this data isn't overwhelmingly telling of anything. It shows that the of the 1 vulnerable tract that each of these counties have, that tract is also underserved.These counties are likely somewhat rural, with the vulnerable population all clustered together in tract. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Counties with most vulnerable people living far from hospitals\nunderserved_pop_by_county <- vulnerable_tracts_with_county %>%\n  st_drop_geometry() %>%\n  filter(underserved == TRUE) %>%\n  group_by(NAMELSAD.y) %>%\n  summarize(\n    underserved_vulnerable_pop = sum(total_popE, na.rm = TRUE),\n    num_underserved_tracts = n()\n  ) %>%\n  arrange(desc(underserved_vulnerable_pop)) %>%\n  head(5)\n\nprint(\"Top 5 counties with most vulnerable people living far from hospitals:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Top 5 counties with most vulnerable people living far from hospitals:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(underserved_pop_by_county)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  NAMELSAD.y        underserved_vulnerable_pop num_underserved_tracts\n  <chr>                                  <dbl>                  <int>\n1 Bradford County                         5466                      1\n2 Dauphin County                          4018                      1\n3 Clearfield County                       3343                      1\n4 Forest County                           2701                      1\n5 Crawford County                         2536                      1\n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# All counties with underserved vulnerable tracts\nall_counties_underserved <- vulnerable_tracts_with_county %>%\n  st_drop_geometry() %>%\n  filter(underserved == TRUE) %>%\n  group_by(NAMELSAD.y) %>%\n  summarize(\n    num_underserved_tracts = n(),\n    underserved_vulnerable_pop = sum(total_popE, na.rm = TRUE)\n  ) %>%\n  left_join(\n    county_summary %>% select(NAMELSAD.y, num_vulnerable_tracts),\n    by = \"NAMELSAD.y\"\n  ) %>%\n  select(NAMELSAD.y, num_vulnerable_tracts, num_underserved_tracts, underserved_vulnerable_pop) %>%\n  arrange(desc(underserved_vulnerable_pop))\n\nprint(\"All counties with underserved vulnerable tracts:\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"All counties with underserved vulnerable tracts:\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(all_counties_underserved)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   NAMELSAD.y        num_vulnerable_tracts num_underserved_tracts\n   <chr>                             <int>                  <int>\n 1 Bradford County                       1                      1\n 2 Dauphin County                        1                      1\n 3 Clearfield County                     5                      1\n 4 Forest County                         1                      1\n 5 Crawford County                       4                      1\n 6 Potter County                         3                      1\n 7 Wayne County                          2                      1\n 8 Juniata County                        1                      1\n 9 Monroe County                         1                      1\n10 Sullivan County                       1                      1\n# ℹ 1 more variable: underserved_vulnerable_pop <dbl>\n```\n\n\n:::\n:::\n\n\n\n**Questions to answer:**\nSeveral of the counties that have 1 underserved tract also have just 1 vulnerable. Many of these counties are rural, suggesting that a vulnerble tract (high elderly population and low income) is automatically considered underserved given the likely large distance between tracts in that rural county and hospitals. However, this is not always the case. For example, Dauphin County is right outside of Harrisburg and fairly urban, implying that the underserved tract there is likely on the very outskirts. \n\nPlaces like Clearfield and Crawford have several vulnerable tracts, but only one underserved tract. This makes sense given their mixed nature with small cities. While more of their tracts are considered vulnerable, a lower proportion are underserved given their urban nature and distance to hospitals. This phenonmenon of high levels of vulnerability and low levels of underserved populations in urban areas is most evidently observed in Philadelphia, which has 17 vulnerable tracts yet 0 underserved tracts. \n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Top 10 counties by total vulnerable population\n# Add population of underserved tracts\ntop_10_vulnerable <- county_summary %>%\n  left_join(\n    vulnerable_tracts_with_county %>%\n      st_drop_geometry() %>%\n      filter(underserved == TRUE) %>%\n      group_by(NAMELSAD.y) %>%\n      summarize(underserved_pop = sum(total_popE, na.rm = TRUE)),\n    by = \"NAMELSAD.y\"\n  ) %>%\n  arrange(desc(total_vulnerable_pop)) %>%\n  head(10)\n\nprint(top_10_vulnerable)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 7\n   NAMELSAD.y       num_vulnerable_tracts num_underserved_tracts pct_underserved\n   <chr>                            <int>                  <int>           <dbl>\n 1 Philadelphia Co…                    17                      0               0\n 2 Allegheny County                    16                      0               0\n 3 Fayette County                       7                      0               0\n 4 Westmoreland Co…                    10                      0               0\n 5 Clearfield Coun…                     5                      1              20\n 6 Luzerne County                       7                      0               0\n 7 Mercer County                        5                      0               0\n 8 Cambria County                       6                      0               0\n 9 Somerset County                      4                      0               0\n10 Erie County                          3                      0               0\n# ℹ 3 more variables: avg_distance_to_hospital <dbl>,\n#   total_vulnerable_pop <dbl>, underserved_pop <dbl>\n```\n\n\n:::\n:::\n\n\n\n\n#### Step 7: Create Summary Table \n\nCreate a professional table showing the top 10 priority counties for healthcare investment.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create and format priority counties table\n\n# Create top 10 priority counties table by vulnerable population\npriority_counties <- county_summary %>%\n  left_join(\n    vulnerable_tracts_with_county %>%\n      st_drop_geometry() %>%\n      filter(underserved == TRUE) %>%\n      group_by(NAMELSAD.y) %>%\n      summarize(underserved_pop = sum(total_popE, na.rm = TRUE)),\n    by = \"NAMELSAD.y\"\n  ) %>%\n  arrange(desc(total_vulnerable_pop)) %>%\n  head(10) %>%\n  select(NAMELSAD.y, num_vulnerable_tracts, num_underserved_tracts, \n         pct_underserved, avg_distance_to_hospital, total_vulnerable_pop, underserved_pop)\n\n# Format and display table\nlibrary(knitr)\nkable(priority_counties,\n      col.names = c(\"County\", \"Vulnerable Tracts\", \"Underserved Tracts\", \n                    \"% Underserved\", \"Avg Distance (mi)\", \"Vulnerable Population\", \"Underserved Population\"),\n      digits = 2,\n      format.args = list(big.mark = \",\"),\n      caption = \"Top 10 Priority Counties for Healthcare Investment (ranked by total vulnerable population)\")\n```\n\n::: {.cell-output-display}\n\n\nTable: Top 10 Priority Counties for Healthcare Investment (ranked by total vulnerable population)\n\n|County              | Vulnerable Tracts| Underserved Tracts| % Underserved| Avg Distance (mi)| Vulnerable Population| Underserved Population|\n|:-------------------|-----------------:|------------------:|-------------:|-----------------:|---------------------:|----------------------:|\n|Philadelphia County |                17|                  0|             0|              0.83|                61,779|                     NA|\n|Allegheny County    |                16|                  0|             0|              2.72|                35,215|                     NA|\n|Fayette County      |                 7|                  0|             0|              2.92|                22,199|                     NA|\n|Westmoreland County |                10|                  0|             0|              2.57|                21,513|                     NA|\n|Clearfield County   |                 5|                  1|            20|             12.16|                19,828|                  3,343|\n|Luzerne County      |                 7|                  0|             0|              3.04|                18,702|                     NA|\n|Mercer County       |                 5|                  0|             0|              1.78|                16,686|                     NA|\n|Cambria County      |                 6|                  0|             0|              4.97|                13,301|                     NA|\n|Somerset County     |                 4|                  0|             0|              8.48|                11,454|                     NA|\n|Erie County         |                 3|                  0|             0|              4.63|                10,511|                     NA|\n\n\n:::\n:::\n\n\n**Requirements:**\n- Use `knitr::kable()` or similar for formatting\n- Include descriptive column names\n- Format numbers appropriately (commas for population, percentages, etc.)\n- Add an informative caption\n- Sort by priority (you decide the metric)\n\n---\n\n## Part 2: Comprehensive Visualization \n\nUsing the skills from Week 3 (Data Visualization), create publication-quality maps and charts.\n\n### Map 1: County-Level Choropleth \n\nCreate a choropleth map showing healthcare access challenges at the county level.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create county-level access map\n# Join county summary data to county spatial boundaries\n# Filter out counties with no vulnerable tracts (to remove gray areas)\ncounties_for_map <- pa_counties_projected %>%\n  left_join(county_summary, by = c(\"NAMELSAD\" = \"NAMELSAD.y\")) %>%\n  mutate(pct_underserved = ifelse(is.na(pct_underserved), 0, pct_underserved))\n\n# Create the map\nggplot() +\n  # County fill by percentage underserved\n  geom_sf(data = counties_for_map, \n          aes(fill = pct_underserved), \n          color = \"white\", \n          size = 0.3) +\n  # Hospital locations as points\n  geom_sf(data = hospitals_projected, \n          color = \"darkblue\", \n          size = 1.2, \n          alpha = 0.7,\n          shape = 3) +  # Shape 3 = plus sign (cross)\n  # Color scheme\n  scale_fill_gradient(low = \"lightyellow\", \n                      high = \"darkred\",\n                      name = \"% Underserved\") +\n  # Labels and theme\n  labs(title = \"Healthcare Access for Vulnerable Populations in Pennsylvania\",\n       subtitle = \"Percentage of vulnerable tracts underserved by county (+ symbols = hospitals)\",\n       caption = \"Source: 2022 ACS 5-Year Estimates, PA Hospital Data\\nVulnerable = low income (bottom 25%) + high elderly (top 25%)\\nUnderserved = >15 miles from nearest hospital\") +\n  theme_void() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 11),\n    plot.caption = element_text(size = 8, hjust = 0),\n    legend.position = \"right\"\n  )\n```\n\n::: {.cell-output-display}\n![](Sen_Sam_Assignment2_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\nThe above map shows the percent of vulnerable tracts that are underserved and the location of hospitals marked by the dark blue \"+\" symbols per the assignments instructions. As can be seen, these large counties have very few hospitals, with a 3 of them having no hospitals at all.\n\nHowever, the map is somewhat misleading. Many of these counties only have 1 tract that is vulnerable. This map makes could be misleading in making it seem like these whole counties are vulnerable and underserved. \n\n---\n\n### Map 2: Detailed Vulnerability Map \n\nCreate a map highlighting underserved vulnerable tracts.\n\n**Your Task:**\n\n::: {.cell}\n\n```{.r .cell-code}\n# Map 2 with bolder vulnerable tracts\nggplot() +\n  geom_sf(data = pa_counties_projected, \n          fill = \"gray95\", \n          color = \"gray60\", \n          size = 0.5) +\n  geom_sf(data = vulnerable_tracts_projected %>% filter(vulnerable == TRUE, underserved == FALSE),\n          fill = \"skyblue\",\n          color = \"blue\",  # Add outline\n          size = 0.5,\n          alpha = 0.7) +\n  geom_sf(data = vulnerable_tracts_projected %>% filter(underserved == TRUE),\n          fill = \"darkred\",\n          color = \"red\",\n          size = 0.7,\n          alpha = 0.9) +\n  geom_sf(data = hospitals_projected,\n          color = \"darkgreen\",\n          size = 1.5,\n          alpha = 0.8,\n          shape = 3) +\n  labs(title = \"Underserved Vulnerable Populations in Pennsylvania\",\n       subtitle = \"Red = underserved vulnerable tracts (>15 mi from hospital) | Blue = other vulnerable tracts | + = Hospitals\",\n       caption = \"Source: 2022 ACS 5-Year Estimates, PA Hospital Data\") +\n  theme_void() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 10),\n    plot.caption = element_text(size = 8, hjust = 0)\n  )\n```\n\n::: {.cell-output-display}\n![](Sen_Sam_Assignment2_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\nThe above map shows vulnerable tracts in light blue with a dark boarder, and vulnerable underserved tracts in dark red. As can be seen, none of the dark red tracts have a hospital in them. For Philadelphia, despite having many hospitals, there are still the highest number of vulnerable tracts. \n\n\n---\n\n\n### Chart: Distribution Analysis\n\nCreate a visualization showing the distribution of distances to hospitals for vulnerable populations.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create histogram showing distribution of distances to hospitals for vulnerable populations\nggplot(vulnerable_tracts_projected %>% filter(vulnerable == TRUE), \n       aes(x = dist_to_hospital_mi)) +\n  geom_histogram(bins = 20, \n                 fill = \"steelblue\", \n                 color = \"white\", \n                 alpha = 0.8) +\n  geom_vline(xintercept = 15, \n             linetype = \"dashed\", \n             color = \"red\", \n             size = 1) +\n  annotate(\"text\", \n           x = 15.5, \n           y = Inf, \n           label = \"15 mile threshold\", \n           vjust = 1.5, \n           hjust = 0, \n           color = \"red\") +\n  labs(title = \"Distribution of Distance to Nearest Hospital for Vulnerable Tracts\",\n       x = \"Distance to Nearest Hospital (miles)\",\n       y = \"Number of Tracts\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 13, face = \"bold\")\n  )\n```\n\n::: {.cell-output-display}\n![](Sen_Sam_Assignment2_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\nThe histogram above shows that a majority of vulnerable populations live within 10 miles of hospitals. With only a few living more than 15 miles away from a hospital, qualifying them as underserved. These populations are at a very high level of risk, but many other factors in addition to distance from a hospital can put vulnerable populations at risk. Of the top 10 counties with the highest vulnerable populations, one of the counties - Clearfield - has a tract that that is also underserved. \n\n**Suggested chart types:**\n- Histogram or density plot of distances\n- Box plot comparing distances across regions\n- Bar chart of underserved tracts by county\n- Scatter plot of distance vs. vulnerable population size\n\n**Requirements:**\n- Clear axes labels with units\n- Appropriate title\n- Professional formatting\n- Brief interpretation (1-2 sentences as a caption or in text)\n\n---\n\n## Part 3: Bring Your Own Data Analysis \n\nChoose your own additional spatial dataset and conduct a supplementary analysis.\n\n### Challenge Options\n\nChoose ONE of the following challenge exercises, or propose your own research question using OpenDataPhilly data (https://opendataphilly.org/datasets/). \n\n**Note these are just loose suggestions to spark ideas - follow or make your own as the data permits and as your ideas evolve. This analysis should include bringing in your own dataset, ensuring the projection/CRS of your layers align and are appropriate for the analysis (not lat/long or geodetic coordinate systems). The analysis portion should include some combination of spatial and attribute operations to answer a relatively straightforward question**\n\n---\n\n#### Education & Youth Services\n\n**Option A: Educational Desert Analysis**\n- **Data:** Schools, Libraries, Recreation Centers, Census tracts (child population)\n- **Question:** \"Which neighborhoods lack adequate educational infrastructure for children?\"\n- **Operations:** Buffer schools/libraries (0.5 mile walking distance), identify coverage gaps, overlay with child population density\n- **Policy relevance:** School district planning, library placement, after-school program siting\n\n**Option B: School Safety Zones**\n- **Data:** Schools, Crime Incidents, Bike Network\n- **Question:** \"Are school zones safe for walking/biking, or are they crime hotspots?\"\n- **Operations:** Buffer schools (1000ft safety zone), spatial join with crime incidents, assess bike infrastructure coverage\n- **Policy relevance:** Safe Routes to School programs, crossing guard placement\n\n---\n\n#### Environmental Justice\n\n**Option C: Green Space Equity** \n- **Data:** Parks, Street Trees, Census tracts (race/income demographics)\n- **Question:** \"Do low-income and minority neighborhoods have equitable access to green space?\"\n- **Operations:** Buffer parks (10-minute walk = 0.5 mile), calculate tree canopy or park acreage per capita, compare by demographics\n- **Policy relevance:** Climate resilience, environmental justice, urban forestry investment\n---\n\n#### Public Safety & Justice\n\n**Option D: Crime & Community Resources**\n- **Data:** Crime Incidents, Recreation Centers, Libraries, Street Lights\n- **Question:** \"Are high-crime areas underserved by community resources?\"\n- **Operations:** Aggregate crime counts to census tracts or neighborhoods, count community resources per area, spatial correlation analysis\n- **Policy relevance:** Community investment, violence prevention strategies\n---\n\n#### Infrastructure & Services\n\n**Option E: Polling Place Accessibility**\n- **Data:** Polling Places, SEPTA stops, Census tracts (elderly population, disability rates)\n- **Question:** \"Are polling places accessible for elderly and disabled voters?\"\n- **Operations:** Buffer polling places and transit stops, identify vulnerable populations, find areas lacking access\n- **Policy relevance:** Voting rights, election infrastructure, ADA compliance\n\n---\n\n#### Health & Wellness\n\n**Option F: Recreation & Population Health**\n- **Data:** Recreation Centers, Playgrounds, Parks, Census tracts (demographics)\n- **Question:** \"Is lack of recreation access associated with vulnerable populations?\"\n- **Operations:** Calculate recreation facilities per capita by neighborhood, buffer facilities for walking access, overlay with demographic indicators\n- **Policy relevance:** Public health investment, recreation programming, obesity prevention\n\n---\n\n#### Emergency Services\n\n**Option G: EMS Response Coverage**\n- **Data:** Fire Stations, EMS stations, Population density, High-rise buildings\n- **Question:** \"Are population-dense areas adequately covered by emergency services?\"\n- **Operations:** Create service area buffers (5-minute drive = ~2 miles), assess population coverage, identify gaps in high-density areas\n- **Policy relevance:** Emergency preparedness, station siting decisions\n\n---\n\n#### Arts & Culture\n\n**Option H: Cultural Asset Distribution**\n- **Data:** Public Art, Museums, Historic sites/markers, Neighborhoods\n- **Question:** \"Do all neighborhoods have equitable access to cultural amenities?\"\n- **Operations:** Count cultural assets per neighborhood, normalize by population, compare distribution across demographic groups\n- **Policy relevance:** Cultural equity, tourism, quality of life, neighborhood identity\n\n---\n\n### Data Sources\n\n**OpenDataPhilly:** https://opendataphilly.org/datasets/\n- Most datasets available as GeoJSON, Shapefile, or CSV with coordinates\n- Always check the Metadata for a data dictionary of the fields.\n\n**Additional Sources:**\n- **Pennsylvania Open Data:** https://data.pa.gov/\n- **Census Bureau (via tidycensus):** Demographics, economic indicators, commute patterns\n- **TIGER/Line (via tigris):** Geographic boundaries\n\n### Recommended Starting Points\n\n**If you're feeling confident:** Choose an advanced challenge with multiple data layers. \n**If you are a beginner, choose something more manageable that helps you understand the basics**\n\n\n**If you have a different idea:** Propose your own question! Just make sure:\n- You can access the spatial data\n- You can perform at least 2 spatial operations\n\n### Your Analysis\n\n**Your Task:**\n\n1. **Find and load additional data**\n   - Document your data source\n   - Check and standardize the CRS\n   - Provide basic summary statistics\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load recreation centers dataset\nrec_centers <- st_read(\"data/PPR_Program_Sites.geojson\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PPR_Program_Sites' from data source \n  `C:\\Users\\16468\\OneDrive - PennO365\\Documents\\Academics\\MUSA\\Public_Policy_Analytics\\portfolio-setup-ssen-droid\\Assignments\\Assignment_2\\data\\PPR_Program_Sites.geojson' \n  using driver `GeoJSON'\nSimple feature collection with 171 features and 10 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.2563 ymin: 39.90444 xmax: -74.96944 ymax: 40.12284\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check basic information\nprint(paste(\"Number of recreation centers:\", nrow(rec_centers)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Number of recreation centers: 171\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"CRS:\", st_crs(rec_centers)$input))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"CRS: WGS 84\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# Check what columns we have\nnames(rec_centers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"OBJECTID\"     \"PARK_NAME\"    \"DPP_ASSET_ID\" \"PROGRAM_TYPE\" \"SITE_CLASS\"  \n [6] \"BUILDING\"     \"GYM\"          \"LABEL_NUMBER\" \"COMMENTS\"     \"DATA_SOURCE\" \n[11] \"geometry\"    \n```\n\n\n:::\n\n```{.r .cell-code}\n# View first few rows to understand the data\nhead(rec_centers)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 10 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -75.2563 ymin: 39.96572 xmax: -75.16713 ymax: 39.97446\nGeodetic CRS:  WGS 84\n  OBJECTID                          PARK_NAME DPP_ASSET_ID PROGRAM_TYPE\n1      807 Tiffany Fletcher Recreation Center         1911      PPR_REC\n2      808        Roberto Clemente Playground         1831      PPR_REC\n3      809              Miles Mack Playground         1910      PPR_REC\n4      810      William T Granahan Playground         1864      PPR_REC\n5      811     Francisville Recreation Center         1859      PPR_REC\n6      812          Charles A Papa Playground         1929      PPR_REC\n  SITE_CLASS BUILDING GYM LABEL_NUMBER\n1          A        Y   N         <NA>\n2          B        Y   N         <NA>\n3          A        Y   N         <NA>\n4          B        Y   N         <NA>\n5          A        Y   N         <NA>\n6          A        Y   N         <NA>\n                                                            COMMENTS\n1 Former name Mill Creek Playground and Recreation Center (12/2022).\n2                                                                   \n3                                                                   \n4                                    Located within Cobbs Creek Park\n5                                                                   \n6                                            Located in Morris Park.\n     DATA_SOURCE                   geometry\n1 Programs 11/24 POINT (-75.21582 39.96598)\n2 Programs 11/24 POINT (-75.16794 39.96572)\n3 Programs 11/24 POINT (-75.19562 39.96748)\n4 Programs 11/24  POINT (-75.2504 39.96936)\n5 Programs 11/24  POINT (-75.16713 39.9685)\n6 Programs 11/24  POINT (-75.2563 39.97446)\n```\n\n\n:::\n:::\n\n\nI chose the Philadelphia Parks & Recreation (PPR) Program Sites dataset. This dataset contains recreation centers, playgrounds, and other youth-focused facilities operated by Philadelphia Parks & Recreation. I selected this dataset because recreation centers provide critical after-school programming, sports facilities, and community activities for children and youth, making them an important complement to the hospital access analysis from Part 1. This analysis will examine whether vulnerable populations (low-income elderly) live in areas that also lack youth educational and recreational resources.\n\nData source: OpenDataPhilly (Philadelphia Parks & Recreation Department). The dataset was last updated in November 2024 according to the \"Programs 11/24\" notation in the data source field.\n\nThe dataset contains 171 recreation facilities across Philadelphia.\n\nThe data is in WGS 84 (EPSG:4326), a geographic coordinate system. We will need to transform it (see below) to Pennsylvania South State Plane (EPSG:3365) to match the projected coordinate system used in Part 1 and enable accurate distance calculations in miles.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform recreation centers to Pennsylvania South State Plane (EPSG:3365)\nrec_centers_projected <- rec_centers %>%\n  st_transform(crs = 3365)\n\n# Check that transformation worked\nprint(paste(\"Recreation centers CRS:\", st_crs(rec_centers_projected)$input))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Recreation centers CRS: EPSG:3365\"\n```\n\n\n:::\n:::\n\n---\n\n2. **Research question**\n\nDo vulnerable populations in Philadelphia have adequate access to recreation centers compared to non-vulnerable populations? \n\n---\n\n3. **Conduct spatial analysis**\n\nUse at least TWO spatial operations to answer your research question.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filter to Philadelphia County only using GEOID\n# Philadelphia County FIPS code is 42101 (42 = PA, 101 = Philadelphia)\nphilly_tracts <- pa_tracts_with_data %>%\n  filter(str_starts(GEOID, \"42101\")) %>%  # Filter for Philadelphia County\n  st_transform(crs = 3365) %>%\n  mutate(\n    pct_elderly = (pop_65_plus_total / total_popE) * 100,\n    low_income = median_incomeE < 55924,\n    high_elderly = pct_elderly >= 20.1,\n    vulnerable = low_income & high_elderly\n  ) %>%\n  filter(!is.na(median_incomeE))\n\n# Check how many tracts we got\nprint(paste(\"Philadelphia tracts:\", nrow(philly_tracts)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Philadelphia tracts: 383\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"Vulnerable tracts:\", sum(philly_tracts$vulnerable, na.rm = TRUE)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Vulnerable tracts: 17\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"Non-vulnerable tracts:\", sum(!philly_tracts$vulnerable, na.rm = TRUE)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Non-vulnerable tracts: 366\"\n```\n\n\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calculate distance for all Philadelphia tracts\nphilly_centroids <- st_centroid(philly_tracts)\ndistances_to_rec <- st_distance(philly_centroids, rec_centers_projected)\n\nphilly_tracts <- philly_tracts %>%\n  mutate(\n    dist_to_rec_ft = as.numeric(apply(distances_to_rec, 1, min)),\n    dist_to_rec_mi = dist_to_rec_ft / 5280\n  )\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Summary statistics by vulnerability status\naccess_comparison <- philly_tracts %>%\n  st_drop_geometry() %>%\n  group_by(vulnerable) %>%\n  summarize(\n    num_tracts = n(),\n    avg_dist_to_rec = mean(dist_to_rec_mi, na.rm = TRUE),\n    median_dist_to_rec = median(dist_to_rec_mi, na.rm = TRUE),\n    pct_within_half_mile = sum(dist_to_rec_mi <= 0.5, na.rm = TRUE) / n() * 100\n  )\n\nprint(access_comparison)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 5\n  vulnerable num_tracts avg_dist_to_rec median_dist_to_rec pct_within_half_mile\n  <lgl>           <int>           <dbl>              <dbl>                <dbl>\n1 FALSE             366           0.371              0.335                 80.1\n2 TRUE               17           0.433              0.366                 70.6\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Map showing distance colored, with vulnerable tracts outlined\nggplot() +\n  # All tracts colored by distance\n  geom_sf(data = philly_tracts,\n          aes(fill = dist_to_rec_mi),\n          color = \"white\",\n          size = 0.2) +\n  # Add thick border around vulnerable tracts\n  geom_sf(data = philly_tracts %>% filter(vulnerable == TRUE),\n          fill = NA,  # No fill, just outline\n          color = \"red\",\n          size = 1.2) +  # Thick red outline\n  # Recreation centers - smaller triangles\n  geom_sf(data = rec_centers_projected,\n          color = \"darkgreen\",\n          size = 1,  # Smaller size\n          shape = 17) +\n  scale_fill_gradient(low = \"lightblue\", high = \"orange\",\n                      name = \"Distance (mi)\\nto Rec Center\") +\n  labs(title = \"Recreation Center Access in Philadelphia: Vulnerable vs Non-Vulnerable Tracts\",\n       subtitle = \"Red outline = Vulnerable tracts | Green triangles = Recreation Centers\",\n       caption = \"Source: Philadelphia Parks & Recreation, 2022 ACS\\nVulnerable = low income + high elderly population\") +\n  theme_void() +\n  theme(\n    plot.title = element_text(size = 13, face = \"bold\"),\n    plot.subtitle = element_text(size = 10),\n    plot.caption = element_text(size = 8, hjust = 0),\n    legend.position = \"right\"\n  )\n```\n\n::: {.cell-output-display}\n![](Sen_Sam_Assignment2_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n**Interpretation:**\n\nThe analysis reveals modest disparities in recreation center access between vulnerable and non-vulnerable populations in Philadelphia. Vulnerable tracts are located an average of 0.43 miles from the nearest recreation center compared to 0.37 miles for non-vulnerable tracts, and only 70.6% of vulnerable tracts fall within a half-mile walking distance compared to 80.1% of non-vulnerable tracts. While these differences suggest that vulnerable populations may have slightly worse access to recreational facilities, further statistical testing would be necessary to determine whether these observed differences are statistically significant or could be attributed to random chance. \nA permutation test or similar randomization procedure would help establish whether the 0.06-mile average difference and the 9.5 percentage point gap in coverage represent meaningful disparities requiring policy intervention. Overall, both groups demonstrate relatively good access to recreation centers, with most Philadelphia tracts located within comfortable walking distance of these facilities.\n\n\n## Finally - A few comments about your incorporation of feedback!\nThis time around I tried to format a little better and delete extraneous lines, such as \"Your Task\" and various instructions. I kept some of the instructions for ease of review as necessary. \n\n\n---\n\n## Submission Requirements\n\n**What to submit:**\n\n1. **Rendered HTML document posted to your course portfolio** with all code, outputs, maps, and text\n   - Use `embed-resources: true` in YAML so it's a single file\n   - All code should run without errors\n   - All maps and charts should display correctly\n\n**File naming:** `LastName_FirstName_Assignment2.html` and `LastName_FirstName_Assignment2.qmd`\n\n---\n\n",
    "supporting": [
      "Sen_Sam_Assignment2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}